<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.20.1106.0321                               -->
<workbook original-version='18.1' source-build='2020.4.0 (20204.20.1106.0321)' source-platform='win' version='18.1' xml:base='https://prod-apnortheast-a.online.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='VaccinePrioritization' path='/t/dineshydinesh86/workbooks' revision='1.0' site='dineshydinesh86' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='state_data' inline='true' name='federated.0h7vq3n0mfuke61c6bpzd0m49zqp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='state_data' name='textscan.127pr9m1bdgu051dia07q0aj8v5s'>
            <connection class='textscan' directory='S:/Hackathons/EY/datasets' filename='state_data.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.127pr9m1bdgu051dia07q0aj8v5s' name='state_data.csv' table='[state_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='pect_urban' ordinal='1' />
            <column datatype='real' name='full_imm_percent' ordinal='2' />
            <column datatype='real' name='percent_elderly' ordinal='3' />
            <column datatype='real' name='hh_more_than_4_per_10000s' ordinal='4' />
            <column datatype='real' name='cold_chain_points_per_10000s' ordinal='5' />
            <column datatype='real' name='storage_cap_lit_per_10000s' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.127pr9m1bdgu051dia07q0aj8v5s' name='state_data.csv' table='[state_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='pect_urban' ordinal='1' />
            <column datatype='real' name='full_imm_percent' ordinal='2' />
            <column datatype='real' name='percent_elderly' ordinal='3' />
            <column datatype='real' name='hh_more_than_4_per_10000s' ordinal='4' />
            <column datatype='real' name='cold_chain_points_per_10000s' ordinal='5' />
            <column datatype='real' name='storage_cap_lit_per_10000s' ordinal='6' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>pect_urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[pect_urban]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>pect_urban</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_imm_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[full_imm_percent]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>full_imm_percent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>percent_elderly</remote-name>
            <remote-type>5</remote-type>
            <local-name>[percent_elderly]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>percent_elderly</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hh_more_than_4_per_10000s</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hh_more_than_4_per_10000s]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>hh_more_than_4_per_10000s</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cold_chain_points_per_10000s</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cold_chain_points_per_10000s]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>cold_chain_points_per_10000s</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>storage_cap_lit_per_10000s</remote-name>
            <remote-type>5</remote-type>
            <local-name>[storage_cap_lit_per_10000s]</local-name>
            <parent-name>[state_data.csv]</parent-name>
            <remote-alias>storage_cap_lit_per_10000s</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='state_data.csv' datatype='table' name='[__tableau_internal_object_id__].[state_data.csv_D6201966938F4C10B9A9E5F012920C60]' role='measure' type='quantitative' />
      <column caption='Cold Chain Points Per 10000S' datatype='real' name='[cold_chain_points_per_10000s]' role='measure' type='quantitative' />
      <column caption='Full Immunization Population Percent' datatype='real' name='[full_imm_percent]' role='measure' type='quantitative' />
      <column caption='# of (More Than 4 HouseHolds)  Per 10000S' datatype='real' name='[hh_more_than_4_per_10000s]' role='measure' type='quantitative' />
      <column caption='% of Urbans' datatype='real' name='[pect_urban]' role='measure' type='quantitative' />
      <column caption='% of Elderly' datatype='real' name='[percent_elderly]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Cold Storage Capacity (Litre Per 10000S)' datatype='real' name='[storage_cap_lit_per_10000s]' role='measure' type='quantitative' />
      <column-instance column='[hh_more_than_4_per_10000s]' derivation='None' name='[none:hh_more_than_4_per_10000s:ok]' pivot='key' type='ordinal' />
      <column-instance column='[cold_chain_points_per_10000s]' derivation='Sum' name='[sum:cold_chain_points_per_10000s:qk]' pivot='key' type='quantitative' />
      <column-instance column='[full_imm_percent]' derivation='Sum' name='[sum:full_imm_percent:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hh_more_than_4_per_10000s]' derivation='Sum' name='[sum:hh_more_than_4_per_10000s:qk]' pivot='key' type='quantitative' />
      <column-instance column='[pect_urban]' derivation='Sum' name='[sum:pect_urban:qk]' pivot='key' type='quantitative' />
      <column-instance column='[percent_elderly]' derivation='Sum' name='[sum:percent_elderly:qk]' pivot='key' type='quantitative' />
      <column-instance column='[storage_cap_lit_per_10000s]' derivation='Sum' name='[sum:storage_cap_lit_per_10000s:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Hh More Than 4 Per 10000S)' hidden='true' name='[Action (Hh More Than 4 Per 10000S)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:hh_more_than_4_per_10000s:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:full_imm_percent:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:cold_chain_points_per_10000s:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:pect_urban:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:percent_elderly:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:storage_cap_lit_per_10000s:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:hh_more_than_4_per_10000s:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='state_data.csv' id='state_data.csv_D6201966938F4C10B9A9E5F012920C60'>
            <properties context=''>
              <relation connection='textscan.127pr9m1bdgu051dia07q0aj8v5s' name='state_data.csv' table='[state_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='pect_urban' ordinal='1' />
                  <column datatype='real' name='full_imm_percent' ordinal='2' />
                  <column datatype='real' name='percent_elderly' ordinal='3' />
                  <column datatype='real' name='hh_more_than_4_per_10000s' ordinal='4' />
                  <column datatype='real' name='cold_chain_points_per_10000s' ordinal='5' />
                  <column datatype='real' name='storage_cap_lit_per_10000s' ordinal='6' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='dist_covid_index' inline='true' name='federated.0e95o7h1l2q10515z6hu10rnwmmu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='dist_covid_index' name='textscan.0k1atcz1g9liyd10oel3a152ug07'>
            <connection class='textscan' directory='S:/Hackathons/EY/results' filename='dist_covid_index.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0k1atcz1g9liyd10oel3a152ug07' name='dist_covid_index.csv' table='[dist_covid_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='string' name='District_Key' ordinal='1' />
            <column datatype='real' name='confirmed' ordinal='2' />
            <column datatype='real' name='active' ordinal='3' />
            <column datatype='real' name='recovered' ordinal='4' />
            <column datatype='real' name='deceased' ordinal='5' />
            <column datatype='real' name='migrated_other' ordinal='6' />
            <column datatype='real' name='covid_index' ordinal='7' />
            <column datatype='real' name='density' ordinal='8' />
            <column datatype='real' name='urbans' ordinal='9' />
            <column datatype='real' name='full_immunes' ordinal='10' />
            <column datatype='real' name='elderlies' ordinal='11' />
            <column datatype='real' name='hh_more_than_4' ordinal='12' />
            <column datatype='real' name='cold_chain_points' ordinal='13' />
            <column datatype='real' name='storage_cap_lits' ordinal='14' />
            <column datatype='real' name='dist_index' ordinal='15' />
            <column datatype='string' name='district' ordinal='16' />
            <column datatype='integer' name='cluster' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0k1atcz1g9liyd10oel3a152ug07' name='dist_covid_index.csv' table='[dist_covid_index#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='string' name='District_Key' ordinal='1' />
            <column datatype='real' name='confirmed' ordinal='2' />
            <column datatype='real' name='active' ordinal='3' />
            <column datatype='real' name='recovered' ordinal='4' />
            <column datatype='real' name='deceased' ordinal='5' />
            <column datatype='real' name='migrated_other' ordinal='6' />
            <column datatype='real' name='covid_index' ordinal='7' />
            <column datatype='real' name='density' ordinal='8' />
            <column datatype='real' name='urbans' ordinal='9' />
            <column datatype='real' name='full_immunes' ordinal='10' />
            <column datatype='real' name='elderlies' ordinal='11' />
            <column datatype='real' name='hh_more_than_4' ordinal='12' />
            <column datatype='real' name='cold_chain_points' ordinal='13' />
            <column datatype='real' name='storage_cap_lits' ordinal='14' />
            <column datatype='real' name='dist_index' ordinal='15' />
            <column datatype='string' name='district' ordinal='16' />
            <column datatype='integer' name='cluster' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>District_Key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[District_Key]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>District_Key</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>confirmed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[confirmed]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>active</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[recovered]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deceased</remote-name>
            <remote-type>5</remote-type>
            <local-name>[deceased]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>deceased</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>migrated_other</remote-name>
            <remote-type>5</remote-type>
            <local-name>[migrated_other]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>migrated_other</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covid_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[covid_index]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>covid_index</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>density</remote-name>
            <remote-type>5</remote-type>
            <local-name>[density]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>density</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>urbans</remote-name>
            <remote-type>5</remote-type>
            <local-name>[urbans]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>urbans</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>full_immunes</remote-name>
            <remote-type>5</remote-type>
            <local-name>[full_immunes]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>full_immunes</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>elderlies</remote-name>
            <remote-type>5</remote-type>
            <local-name>[elderlies]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>elderlies</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hh_more_than_4</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hh_more_than_4]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>hh_more_than_4</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cold_chain_points</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cold_chain_points]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>cold_chain_points</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>storage_cap_lits</remote-name>
            <remote-type>5</remote-type>
            <local-name>[storage_cap_lits]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>storage_cap_lits</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dist_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dist_index]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>dist_index</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>district</remote-name>
            <remote-type>129</remote-type>
            <local-name>[district]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>district</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>35</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cluster</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cluster]</local-name>
            <parent-name>[dist_covid_index.csv]</parent-name>
            <remote-alias>cluster</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>35</approx-count>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='District Key' datatype='string' name='[District_Key]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='dist_covid_index.csv' datatype='table' name='[__tableau_internal_object_id__].[dist_covid_index.csv_B09D7922ACD94BBEB45475311747E266]' role='measure' type='quantitative' />
      <column caption='Active' datatype='real' name='[active]' role='measure' type='quantitative' />
      <column datatype='integer' name='[cluster]' role='measure' type='quantitative' />
      <column caption='# of Cold Chain Points' datatype='real' name='[cold_chain_points]' role='measure' type='quantitative' />
      <column caption='Confirmed' datatype='real' name='[confirmed]' role='measure' type='quantitative' />
      <column caption='Covid Index' datatype='real' name='[covid_index]' role='measure' type='quantitative' />
      <column caption='Deceased' datatype='real' name='[deceased]' role='measure' type='quantitative' />
      <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative' />
      <column caption='Dist Index' datatype='real' name='[dist_index]' role='measure' type='quantitative' />
      <column caption='District' datatype='string' name='[district]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='&quot;Bangalore Urban&quot;' value='&quot;Bengaluru Urban&quot;' />
          <semantic-value key='&quot;Bargarh (Baragarh)&quot;' value='&quot;Bargarh&quot;' />
          <semantic-value key='&quot;Bishwanath&quot;' value='&quot;Biswanath&quot;' />
          <semantic-value key='&quot;Boudh (Bauda)&quot;' value='&quot;Boudh&quot;' />
          <semantic-value key='&quot;Central Delhi&quot;' value='&quot;Central&quot;' />
          <semantic-value key='&quot;Chamarajanagara&quot;' value='&quot;Chamarajanagar&quot;' />
          <semantic-value key='&quot;Debagarh (Deogarh)&quot;' value='&quot;Deogarh&quot;' />
          <semantic-value key='&quot;Devbhoomi Dwarka&quot;' value='&quot;Devbhumi Dwarka&quot;' />
          <semantic-value key='&quot;East Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
          <semantic-value key='&quot;Gautam Buddh Nagar&quot;' value='&quot;Gautam Buddha Nagar&quot;' />
          <semantic-value key='&quot;Hissar&quot;' value='&quot;Hisar&quot;' />
          <semantic-value key='&quot;Kendujhar (Keonjhar)&quot;' value='&quot;Kendujhar&quot;' />
          <semantic-value key='&quot;Lahaul and Spiti&quot;' value='&quot;Lahul &amp; Spiti&quot;' />
          <semantic-value key='&quot;South Salmara&quot;' value='&quot;South Salmara-Mankachar&quot;' />
          <semantic-value key='&quot;Subarnapur (Sonepur)&quot;' value='&quot;Sonepur&quot;' />
          <semantic-value key='&quot;Upper Dibang Valley&quot;' value='&quot;Dibang Valley&quot;' />
          <semantic-value key='&quot;West Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
        </semantic-values>
      </column>
      <column caption='% of Elderlies' datatype='real' name='[elderlies]' role='measure' type='quantitative' />
      <column caption='Full Immunization Population Percent' datatype='real' name='[full_immunes]' role='measure' type='quantitative' />
      <column caption='# of (More Than 4 HouseHolds)  Per 10000S' datatype='real' name='[hh_more_than_4]' role='measure' type='quantitative' />
      <column caption='Migrated Other' datatype='real' name='[migrated_other]' role='measure' type='quantitative' />
      <column caption='Recovered' datatype='real' name='[recovered]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Storage Cap Lits' datatype='real' name='[storage_cap_lits]' role='measure' type='quantitative' />
      <column caption='% of Urbans' datatype='real' name='[urbans]' role='measure' type='quantitative' />
      <column-instance column='[cluster]' derivation='None' name='[none:cluster:ok]' pivot='key' type='ordinal' />
      <column-instance column='[dist_index]' derivation='None' name='[none:dist_index:ok]' pivot='key' type='ordinal' />
      <column-instance column='[elderlies]' derivation='None' name='[none:elderlies:ok]' pivot='key' type='ordinal' />
      <column-instance column='[elderlies]' derivation='None' name='[none:elderlies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cold_chain_points]' derivation='Sum' name='[sum:cold_chain_points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[density]' derivation='Sum' name='[sum:density:qk]' pivot='key' type='quantitative' />
      <column-instance column='[elderlies]' derivation='Sum' name='[sum:elderlies:qk]' pivot='key' type='quantitative' />
      <column-instance column='[full_immunes]' derivation='Sum' name='[sum:full_immunes:qk]' pivot='key' type='quantitative' />
      <column-instance column='[hh_more_than_4]' derivation='Sum' name='[sum:hh_more_than_4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[storage_cap_lits]' derivation='Sum' name='[sum:storage_cap_lits:qk]' pivot='key' type='quantitative' />
      <column-instance column='[urbans]' derivation='Sum' name='[sum:urbans:qk]' pivot='key' type='quantitative' />
      <group caption='Action (Dist Index,District)' hidden='true' name='[Action (Dist Index,District)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:dist_index:ok]' />
          <groupfilter function='level-members' level='[district]' />
        </groupfilter>
      </group>
      <group caption='Action (District)' hidden='true' name='[Action (District)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[district]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (Dist Index,District)' hidden='true' name='[Tooltip (Dist Index,District)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:dist_index:ok]' />
          <groupfilter function='level-members' level='[district]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (District)' hidden='true' name='[Tooltip (District)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[district]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (District,Elderlies)' hidden='true' name='[Tooltip (District,Elderlies)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[district]' />
          <groupfilter function='level-members' level='[none:elderlies:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:cluster:ok]' palette='summer_10_0' type='palette'>
            <map to='#00a2b3'>
              <bucket>4</bucket>
            </map>
            <map to='#8fb202'>
              <bucket>0</bucket>
            </map>
            <map to='#b9ca5d'>
              <bucket>1</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>3</bucket>
            </map>
            <map to='#ff5500'>
              <bucket>2</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:cold_chain_points_access:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:density:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:storage_cap_lits:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:cold_chain_points:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:elderlies:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:hh_more_than_4:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:urbans:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:elderlies:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:full_immunes:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='dist_covid_index.csv' id='dist_covid_index.csv_B09D7922ACD94BBEB45475311747E266'>
            <properties context=''>
              <relation connection='textscan.0k1atcz1g9liyd10oel3a152ug07' name='dist_covid_index.csv' table='[dist_covid_index#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='string' name='District_Key' ordinal='1' />
                  <column datatype='real' name='confirmed' ordinal='2' />
                  <column datatype='real' name='active' ordinal='3' />
                  <column datatype='real' name='recovered' ordinal='4' />
                  <column datatype='real' name='deceased' ordinal='5' />
                  <column datatype='real' name='migrated_other' ordinal='6' />
                  <column datatype='real' name='covid_index' ordinal='7' />
                  <column datatype='real' name='density' ordinal='8' />
                  <column datatype='real' name='urbans' ordinal='9' />
                  <column datatype='real' name='full_immunes' ordinal='10' />
                  <column datatype='real' name='elderlies' ordinal='11' />
                  <column datatype='real' name='hh_more_than_4' ordinal='12' />
                  <column datatype='real' name='cold_chain_points' ordinal='13' />
                  <column datatype='real' name='storage_cap_lits' ordinal='14' />
                  <column datatype='real' name='dist_index' ordinal='15' />
                  <column datatype='string' name='district' ordinal='16' />
                  <column datatype='integer' name='cluster' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='clust' inline='true' name='federated.0cnjf411ozp39114b75iy0xfakgo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='clust' name='textscan.1qhqhka0eaz56y1cte1u60zt4tul'>
            <connection class='textscan' directory='S:/Hackathons/EY/results' filename='clust.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1qhqhka0eaz56y1cte1u60zt4tul' name='clust.csv' table='[clust#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='District_Key' ordinal='0' />
            <column datatype='real' name='dist_index' ordinal='1' />
            <column datatype='real' name='covid_index' ordinal='2' />
            <column datatype='integer' name='clusters' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1qhqhka0eaz56y1cte1u60zt4tul' name='clust.csv' table='[clust#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='District_Key' ordinal='0' />
            <column datatype='real' name='dist_index' ordinal='1' />
            <column datatype='real' name='covid_index' ordinal='2' />
            <column datatype='integer' name='clusters' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[clust.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>District_Key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[District_Key]</local-name>
            <parent-name>[clust.csv]</parent-name>
            <remote-alias>District_Key</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clust.csv_A1245BB2D6324F7EA0F6553A894E8D84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dist_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[dist_index]</local-name>
            <parent-name>[clust.csv]</parent-name>
            <remote-alias>dist_index</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clust.csv_A1245BB2D6324F7EA0F6553A894E8D84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>covid_index</remote-name>
            <remote-type>5</remote-type>
            <local-name>[covid_index]</local-name>
            <parent-name>[clust.csv]</parent-name>
            <remote-alias>covid_index</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clust.csv_A1245BB2D6324F7EA0F6553A894E8D84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>clusters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[clusters]</local-name>
            <parent-name>[clust.csv]</parent-name>
            <remote-alias>clusters</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[clust.csv_A1245BB2D6324F7EA0F6553A894E8D84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='District Key' datatype='string' name='[District_Key]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='clust.csv' datatype='table' name='[__tableau_internal_object_id__].[clust.csv_A1245BB2D6324F7EA0F6553A894E8D84]' role='measure' type='quantitative' />
      <column datatype='integer' name='[clusters]' role='measure' type='quantitative' />
      <column-instance column='[clusters]' derivation='Attribute' name='[attr:clusters:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:clusters:ok]' type='palette'>
            <map to='#2ca02c'>
              <bucket>7</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>1</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>8</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>5</bucket>
            </map>
            <map to='#aaaaff'>
              <bucket>3</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>9</bucket>
            </map>
            <map to='#c807c8'>
              <bucket>4</bucket>
            </map>
            <map to='#d62728'>
              <bucket>6</bucket>
            </map>
            <map to='#ff0000'>
              <bucket>2</bucket>
            </map>
            <map to='#ff5500'>
              <bucket>0</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='clust.csv' id='clust.csv_A1245BB2D6324F7EA0F6553A894E8D84'>
            <properties context=''>
              <relation connection='textscan.1qhqhka0eaz56y1cte1u60zt4tul' name='clust.csv' table='[clust#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='District_Key' ordinal='0' />
                  <column datatype='real' name='dist_index' ordinal='1' />
                  <column datatype='real' name='covid_index' ordinal='2' />
                  <column datatype='integer' name='clusters' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='cold_equip_data' inline='true' name='federated.15gdq5x1lsa0pr1bye7ta0nnxheb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ccee_vis' name='textscan.0sc9w7d1qlr5zv1gpw7ku08wqm47'>
            <connection class='textscan' directory='S:/Hackathons/EY/datasets/coldchain' filename='ccee_vis.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0sc9w7d1qlr5zv1gpw7ku08wqm47' name='ccee_vis.csv' table='[ccee_vis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='Total population(lks)' ordinal='1' />
            <column datatype='real' name='Total number of CCE' ordinal='2' />
            <column datatype='integer' name='Total number of CCP' ordinal='3' />
            <column datatype='real' name='CCE per lakh population' ordinal='4' />
            <column datatype='real' name='CCE per CCP' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0sc9w7d1qlr5zv1gpw7ku08wqm47' name='ccee_vis.csv' table='[ccee_vis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='Total population(lks)' ordinal='1' />
            <column datatype='real' name='Total number of CCE' ordinal='2' />
            <column datatype='integer' name='Total number of CCP' ordinal='3' />
            <column datatype='real' name='CCE per lakh population' ordinal='4' />
            <column datatype='real' name='CCE per CCP' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total population(lks)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total population(lks)]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>Total population(lks)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of CCE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total number of CCE]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>Total number of CCE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of CCP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total number of CCP]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>Total number of CCP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCE per lakh population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCE per lakh population]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>CCE per lakh population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCE per CCP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCE per CCP]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>CCE per CCP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='ccee_vis.csv' datatype='table' name='[__tableau_internal_object_id__].[ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ccee_vis.csv' id='ccee_vis.csv_34D54A3347C0444F9A586AB0E57FD38B'>
            <properties context=''>
              <relation connection='textscan.0sc9w7d1qlr5zv1gpw7ku08wqm47' name='ccee_vis.csv' table='[ccee_vis#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='Total population(lks)' ordinal='1' />
                  <column datatype='real' name='Total number of CCE' ordinal='2' />
                  <column datatype='integer' name='Total number of CCP' ordinal='3' />
                  <column datatype='real' name='CCE per lakh population' ordinal='4' />
                  <column datatype='real' name='CCE per CCP' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='ccee_vis (2)' inline='true' name='federated.1gqgzgz1974bca12ufv2x15v2zje' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ccee_vis' name='textscan.1vzq4qu08ehbbm18isv0l0q0safn'>
            <connection class='textscan' directory='S:/Hackathons/EY/datasets/coldchain' filename='ccee_vis.csv' password='' server='' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1vzq4qu08ehbbm18isv0l0q0safn' name='ccee_vis.csv' table='[ccee_vis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='Total population(lks)' ordinal='1' />
            <column datatype='real' name='Total number of CCE' ordinal='2' />
            <column datatype='integer' name='Total number of CCP' ordinal='3' />
            <column datatype='real' name='CCE per lakh population' ordinal='4' />
            <column datatype='real' name='CCE per CCP' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1vzq4qu08ehbbm18isv0l0q0safn' name='ccee_vis.csv' table='[ccee_vis#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='real' name='Total population(lks)' ordinal='1' />
            <column datatype='real' name='Total number of CCE' ordinal='2' />
            <column datatype='integer' name='Total number of CCP' ordinal='3' />
            <column datatype='real' name='CCE per lakh population' ordinal='4' />
            <column datatype='real' name='CCE per CCP' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total population(lks)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total population(lks)]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>Total population(lks)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of CCE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total number of CCE]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>Total number of CCE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of CCP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total number of CCP]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>Total number of CCP</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCE per lakh population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCE per lakh population]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>CCE per lakh population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCE per CCP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCE per CCP]</local-name>
            <parent-name>[ccee_vis.csv]</parent-name>
            <remote-alias>CCE per CCP</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='ccee_vis.csv' datatype='table' name='[__tableau_internal_object_id__].[ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='ccee_vis.csv' id='ccee_vis.csv_9D6E01A7B7564857A115A511F55675F8'>
            <properties context=''>
              <relation connection='textscan.1vzq4qu08ehbbm18isv0l0q0safn' name='ccee_vis.csv' table='[ccee_vis#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='real' name='Total population(lks)' ordinal='1' />
                  <column datatype='real' name='Total number of CCE' ordinal='2' />
                  <column datatype='integer' name='Total number of CCP' ordinal='3' />
                  <column datatype='real' name='CCE per lakh population' ordinal='4' />
                  <column datatype='real' name='CCE per CCP' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Table 1 (cold_data)' inline='true' name='federated.1v2s62a1spvpsg16zcppd1vinmyc' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='cold_data' name='excel-direct.1d4k7qa0cavabr1fsdfnx13m9yni'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='S:/Hackathons/EY/datasets/coldchain/cold_data.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1d4k7qa0cavabr1fsdfnx13m9yni' name='Table 1' table='[&apos;Table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:L36:no:A1:L36:0' header='yes' outcome='2'>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='Cold Chain Points' ordinal='1' />
            <column datatype='integer' name='Walk in Coolers' ordinal='2' />
            <column datatype='integer' name='Walk in Freezers' ordinal='3' />
            <column datatype='integer' name='Ice Lined Refrigerator' ordinal='4' />
            <column datatype='integer' name='Deep Freezers' ordinal='5' />
            <column datatype='integer' name='Solar Units' ordinal='6' />
            <column datatype='real' name='Total population' ordinal='7' />
            <column datatype='real' name='Total number of CCE' ordinal='8' />
            <column datatype='integer' name='Total number of CCP' ordinal='9' />
            <column datatype='real' name='CCE per lakh population' ordinal='10' />
            <column datatype='real' name='CCE per CCP' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1d4k7qa0cavabr1fsdfnx13m9yni' name='Table 1' table='[&apos;Table 1$&apos;]' type='table'>
          <columns gridOrigin='A1:L36:no:A1:L36:0' header='yes' outcome='2'>
            <column datatype='string' name='state' ordinal='0' />
            <column datatype='integer' name='Cold Chain Points' ordinal='1' />
            <column datatype='integer' name='Walk in Coolers' ordinal='2' />
            <column datatype='integer' name='Walk in Freezers' ordinal='3' />
            <column datatype='integer' name='Ice Lined Refrigerator' ordinal='4' />
            <column datatype='integer' name='Deep Freezers' ordinal='5' />
            <column datatype='integer' name='Solar Units' ordinal='6' />
            <column datatype='real' name='Total population' ordinal='7' />
            <column datatype='real' name='Total number of CCE' ordinal='8' />
            <column datatype='integer' name='Total number of CCP' ordinal='9' />
            <column datatype='real' name='CCE per lakh population' ordinal='10' />
            <column datatype='real' name='CCE per CCP' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Table 1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:L36:no:A1:L36:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cold Chain Points</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cold Chain Points]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Cold Chain Points</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Walk in Coolers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Walk in Coolers]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Walk in Coolers</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Walk in Freezers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Walk in Freezers]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Walk in Freezers</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ice Lined Refrigerator</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ice Lined Refrigerator]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Ice Lined Refrigerator</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deep Freezers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deep Freezers]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Deep Freezers</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar Units</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Solar Units]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Solar Units</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total population]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Total population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of CCE</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total number of CCE]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Total number of CCE</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total number of CCP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total number of CCP]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>Total number of CCP</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCE per lakh population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCE per lakh population]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>CCE per lakh population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CCE per CCP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[CCE per CCP]</local-name>
            <parent-name>[Table 1]</parent-name>
            <remote-alias>CCE per CCP</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Table 1_E9C10AC40835457C8ED2D21E65B4481C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[CCE per CCP]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cold Chain Points]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deep Freezers]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Ice Lined Refrigerator]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Solar Units]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Walk in Coolers]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Walk in Freezers]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Table 1' datatype='table' name='[__tableau_internal_object_id__].[Table 1_E9C10AC40835457C8ED2D21E65B4481C]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[Table 1_E9C10AC40835457C8ED2D21E65B4481C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Table 1_E9C10AC40835457C8ED2D21E65B4481C:qk]' pivot='key' type='quantitative' />
      <column-instance column='[CCE per CCP]' derivation='Sum' name='[sum:CCE per CCP:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cold Chain Points]' derivation='Sum' name='[sum:Cold Chain Points:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deep Freezers]' derivation='Sum' name='[sum:Deep Freezers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ice Lined Refrigerator]' derivation='Sum' name='[sum:Ice Lined Refrigerator:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Solar Units]' derivation='Sum' name='[sum:Solar Units:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Walk in Coolers]' derivation='Sum' name='[sum:Walk in Coolers:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Walk in Freezers]' derivation='Sum' name='[sum:Walk in Freezers:qk]' pivot='key' type='quantitative' />
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <group caption='Tooltip (State)' hidden='true' name='[Tooltip (State)]' name-style='unqualified' user:auto-column='sheet_link' user:ui-vit-column='true'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Deep Freezers:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per CCP:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Cold Chain Points:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Walk in Coolers:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Walk in Freezers:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Calculation_74027984301187072:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Solar Units:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Ice Lined Refrigerator:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[__tableau_internal_object_id__].[cnt:Table 1_E9C10AC40835457C8ED2D21E65B4481C:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Table 1' id='Table 1_E9C10AC40835457C8ED2D21E65B4481C'>
            <properties context=''>
              <relation connection='excel-direct.1d4k7qa0cavabr1fsdfnx13m9yni' name='Table 1' table='[&apos;Table 1$&apos;]' type='table'>
                <columns gridOrigin='A1:L36:no:A1:L36:0' header='yes' outcome='2'>
                  <column datatype='string' name='state' ordinal='0' />
                  <column datatype='integer' name='Cold Chain Points' ordinal='1' />
                  <column datatype='integer' name='Walk in Coolers' ordinal='2' />
                  <column datatype='integer' name='Walk in Freezers' ordinal='3' />
                  <column datatype='integer' name='Ice Lined Refrigerator' ordinal='4' />
                  <column datatype='integer' name='Deep Freezers' ordinal='5' />
                  <column datatype='integer' name='Solar Units' ordinal='6' />
                  <column datatype='real' name='Total population' ordinal='7' />
                  <column datatype='real' name='Total number of CCE' ordinal='8' />
                  <column datatype='integer' name='Total number of CCP' ordinal='9' />
                  <column datatype='real' name='CCE per lakh population' ordinal='10' />
                  <column datatype='real' name='CCE per CCP' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource inline='true' name='Clipboard_20210105T063634' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Clipboard_20210105T063634' name='Clipboard_20210105T063634leaf'>
            <connection class='textscan' directory='C:/Users/dines/Documents/My Tableau Repository/Datasources' filename='Clipboard_20210105T063634.txt' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='Clipboard_20210105T063634leaf' name='Clipboard_20210105T063634#txt' table='[Clipboard_20210105T063634#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='string' name='Measure Names' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Measure Values' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='Clipboard_20210105T063634leaf' name='Clipboard_20210105T063634#txt' table='[Clipboard_20210105T063634#txt]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator='&#9;'>
            <column datatype='string' name='Measure Names' ordinal='0' />
            <column datatype='string' name='State' ordinal='1' />
            <column datatype='integer' name='Measure Values' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Clipboard_20210105T063634#txt]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;&#9;&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Measure Names]</local-name>
            <parent-name>[Clipboard_20210105T063634#txt]</parent-name>
            <remote-alias>Measure Names</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210105T063634]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Clipboard_20210105T063634#txt]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210105T063634]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Measure Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Measure Values]</local-name>
            <parent-name>[Clipboard_20210105T063634#txt]</parent-name>
            <remote-alias>Measure Values</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Clipboard_20210105T063634]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Clipboard_20210105T063634' datatype='table' name='[__tableau_internal_object_id__].[Clipboard_20210105T063634]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Clipboard_20210105T063634' id='Clipboard_20210105T063634'>
            <properties context=''>
              <relation connection='Clipboard_20210105T063634leaf' name='Clipboard_20210105T063634#txt' table='[Clipboard_20210105T063634#txt]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator='&#9;'>
                  <column datatype='string' name='Measure Names' ordinal='0' />
                  <column datatype='string' name='State' ordinal='1' />
                  <column datatype='integer' name='Measure Values' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter1' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Cold_Chain_Infrastructure' type='sheet' worksheet='state_cold' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Cold_Chain_Infrastructure' />
      </command>
    </action>
    <action caption='indicators_filter' name='[Action3]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Priority_Index_Dashboard' type='sheet' />
      <link caption='indicators_filter' delimiter=',' escape='\' expression='tsl:Priority_Index_Dashboard?%5Bfederated.0e95o7h1l2q10515z6hu10rnwmmu%5D.%5Bdistrict%5D~s0=&lt;[district]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Priority_Index_Dashboard' />
      </command>
    </action>
    <action caption='covid19_index' name='[Action4]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='Priority_Index_Dashboard' type='sheet' />
      <link caption='covid19_index' delimiter=',' escape='\' expression='tsl:Priority_Index_Dashboard?%5Bfederated.0e95o7h1l2q10515z6hu10rnwmmu%5D.%5Bdistrict%5D~s0=&lt;[district]~na&gt;' include-null='true' multi-select='true' url-escape='true' />
      <command command='tsc:tsl-filter'>
        <param name='target' value='Priority_Index_Dashboard' />
      </command>
    </action>
    <datasources>
      <datasource caption='dist_covid_index' name='federated.0e95o7h1l2q10515z6hu10rnwmmu' />
    </datasources>
    <datasource-dependencies datasource='federated.0e95o7h1l2q10515z6hu10rnwmmu'>
      <column caption='District' datatype='string' name='[district]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
        <semantic-values semantic-role='[County].[Name]'>
          <semantic-value key='&quot;Bangalore Urban&quot;' value='&quot;Bengaluru Urban&quot;' />
          <semantic-value key='&quot;Bargarh (Baragarh)&quot;' value='&quot;Bargarh&quot;' />
          <semantic-value key='&quot;Bishwanath&quot;' value='&quot;Biswanath&quot;' />
          <semantic-value key='&quot;Boudh (Bauda)&quot;' value='&quot;Boudh&quot;' />
          <semantic-value key='&quot;Central Delhi&quot;' value='&quot;Central&quot;' />
          <semantic-value key='&quot;Chamarajanagara&quot;' value='&quot;Chamarajanagar&quot;' />
          <semantic-value key='&quot;Debagarh (Deogarh)&quot;' value='&quot;Deogarh&quot;' />
          <semantic-value key='&quot;Devbhoomi Dwarka&quot;' value='&quot;Devbhumi Dwarka&quot;' />
          <semantic-value key='&quot;East Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
          <semantic-value key='&quot;Gautam Buddh Nagar&quot;' value='&quot;Gautam Buddha Nagar&quot;' />
          <semantic-value key='&quot;Hissar&quot;' value='&quot;Hisar&quot;' />
          <semantic-value key='&quot;Kendujhar (Keonjhar)&quot;' value='&quot;Kendujhar&quot;' />
          <semantic-value key='&quot;Lahaul and Spiti&quot;' value='&quot;Lahul &amp; Spiti&quot;' />
          <semantic-value key='&quot;South Salmara&quot;' value='&quot;South Salmara-Mankachar&quot;' />
          <semantic-value key='&quot;Subarnapur (Sonepur)&quot;' value='&quot;Sonepur&quot;' />
          <semantic-value key='&quot;Upper Dibang Valley&quot;' value='&quot;Dibang Valley&quot;' />
          <semantic-value key='&quot;West Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
        </semantic-values>
      </column>
    </datasource-dependencies>
  </actions>
  <worksheets>
    <worksheet name='District_Index vs Covid19 Index'>
      <table>
        <view>
          <datasources>
            <datasource caption='dist_covid_index' name='federated.0e95o7h1l2q10515z6hu10rnwmmu' />
          </datasources>
          <datasource-dependencies datasource='federated.0e95o7h1l2q10515z6hu10rnwmmu'>
            <column caption='District Key' datatype='string' name='[District_Key]' role='dimension' type='nominal' />
            <column-instance column='[District_Key]' derivation='Attribute' name='[attr:District_Key:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[cluster]' role='measure' type='quantitative' />
            <column caption='Covid Index' datatype='real' name='[covid_index]' role='measure' type='quantitative' />
            <column caption='Dist Index' datatype='real' name='[dist_index]' role='measure' type='quantitative' />
            <column-instance column='[District_Key]' derivation='None' name='[none:District_Key:nk]' pivot='key' type='nominal' />
            <column-instance column='[cluster]' derivation='None' name='[none:cluster:ok]' pivot='key' type='ordinal' />
            <column-instance column='[covid_index]' derivation='None' name='[none:covid_index:qk]' pivot='key' type='quantitative' />
            <column-instance column='[dist_index]' derivation='None' name='[none:dist_index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:cluster:ok]' />
              <lod column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:District_Key:nk]' />
              <tooltip column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[attr:District_Key:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run><![CDATA[Cluster : <[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:cluster:ok]>
]]></run>
                <run fontcolor='#000000'>covid_index:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:covid_index:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#000000'>dist_index:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:dist_index:qk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[District : <[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:District_Key:nk]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:covid_index:qk]</rows>
        <cols>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:dist_index:qk]</cols>
      </table>
      <simple-id uuid='{198C2FA7-4402-40C5-AC1A-29791F7FF186}' />
    </worksheet>
    <worksheet name='Priority_Map'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dist_covid_index' name='federated.0e95o7h1l2q10515z6hu10rnwmmu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e95o7h1l2q10515z6hu10rnwmmu'>
            <column-instance column='[cluster]' derivation='Attribute' name='[attr:cluster:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[cluster]' role='measure' type='quantitative' />
            <column caption='Dist Index' datatype='real' name='[dist_index]' role='measure' type='quantitative' />
            <column caption='District' datatype='string' name='[district]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;Bangalore Urban&quot;' value='&quot;Bengaluru Urban&quot;' />
                <semantic-value key='&quot;Bargarh (Baragarh)&quot;' value='&quot;Bargarh&quot;' />
                <semantic-value key='&quot;Bishwanath&quot;' value='&quot;Biswanath&quot;' />
                <semantic-value key='&quot;Boudh (Bauda)&quot;' value='&quot;Boudh&quot;' />
                <semantic-value key='&quot;Central Delhi&quot;' value='&quot;Central&quot;' />
                <semantic-value key='&quot;Chamarajanagara&quot;' value='&quot;Chamarajanagar&quot;' />
                <semantic-value key='&quot;Debagarh (Deogarh)&quot;' value='&quot;Deogarh&quot;' />
                <semantic-value key='&quot;Devbhoomi Dwarka&quot;' value='&quot;Devbhumi Dwarka&quot;' />
                <semantic-value key='&quot;East Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
                <semantic-value key='&quot;Gautam Buddh Nagar&quot;' value='&quot;Gautam Buddha Nagar&quot;' />
                <semantic-value key='&quot;Hissar&quot;' value='&quot;Hisar&quot;' />
                <semantic-value key='&quot;Kendujhar (Keonjhar)&quot;' value='&quot;Kendujhar&quot;' />
                <semantic-value key='&quot;Lahaul and Spiti&quot;' value='&quot;Lahul &amp; Spiti&quot;' />
                <semantic-value key='&quot;South Salmara&quot;' value='&quot;South Salmara-Mankachar&quot;' />
                <semantic-value key='&quot;Subarnapur (Sonepur)&quot;' value='&quot;Sonepur&quot;' />
                <semantic-value key='&quot;Upper Dibang Valley&quot;' value='&quot;Dibang Valley&quot;' />
                <semantic-value key='&quot;West Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[district]' derivation='None' name='[none:district:nk]' pivot='key' type='nominal' />
            <column-instance column='[dist_index]' derivation='Sum' name='[sum:dist_index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Longitude (generated)]' field-type='quantitative' max='12630271.345066465' min='6823632.1519970112' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Latitude (generated)]' field-type='quantitative' max='4265175.0297471266' min='807606.62317255687' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.26737416712644735' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:dist_index:qk]' max='0.5347483342528947' min='0.0' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#f82929</color>
                <color>#f25050</color>
                <color>#ec7676</color>
                <color>#e59999</color>
                <color>#dfbaba</color>
                <color>#d9d9d9</color>
                <color>#d2dfba</color>
                <color>#cce599</color>
                <color>#c4ec76</color>
                <color>#bcf250</color>
                <color>#b3f829</color>
                <color>#aaff00</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:district:nk]' />
              <lod column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[attr:cluster:qk]' />
              <color column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:dist_index:qk]' />
              <geometry column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Dist Index:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:dist_index:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>District:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:district:nk]>]]></run>
                <run>Æ&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
                <format attr='has-halo' value='true' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Latitude (generated)]</rows>
        <cols>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{0E8029FB-FF18-4E57-8F08-64D0187DD884}' />
    </worksheet>
    <worksheet name='cold_details'>
      <layout-options>
        <title>
          <formatted-text>
            <run>cold details</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Table 1 (cold_data)' name='federated.1v2s62a1spvpsg16zcppd1vinmyc' />
          </datasources>
          <datasource-dependencies datasource='federated.1v2s62a1spvpsg16zcppd1vinmyc'>
            <column datatype='real' name='[CCE per CCP]' role='measure' type='quantitative' />
            <column datatype='real' name='[CCE per lakh population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Cold Chain Points]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Deep Freezers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Ice Lined Refrigerator]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Solar Units]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Walk in Coolers]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Walk in Freezers]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[CCE per CCP]' derivation='Sum' name='[sum:CCE per CCP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CCE per lakh population]' derivation='Sum' name='[sum:CCE per lakh population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cold Chain Points]' derivation='Sum' name='[sum:Cold Chain Points:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deep Freezers]' derivation='Sum' name='[sum:Deep Freezers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Ice Lined Refrigerator]' derivation='Sum' name='[sum:Ice Lined Refrigerator:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Solar Units]' derivation='Sum' name='[sum:Solar Units:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Walk in Coolers]' derivation='Sum' name='[sum:Walk in Coolers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Walk in Freezers]' derivation='Sum' name='[sum:Walk in Freezers:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Cold Chain Points:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Deep Freezers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Ice Lined Refrigerator:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Walk in Coolers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Walk in Freezers:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Solar Units:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per CCP:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per lakh population:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Cold Chain Points:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Deep Freezers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Ice Lined Refrigerator:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Walk in Coolers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Walk in Freezers:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:Solar Units:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per CCP:qk]&quot;</bucket>
              <bucket>&quot;[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per lakh population:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[Action (State)]'>
            <groupfilter function='level-members' level='[state]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1v2s62a1spvpsg16zcppd1vinmyc].[:Measure Names]</column>
            <column>[federated.1v2s62a1spvpsg16zcppd1vinmyc].[Action (State)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[Multiple Values]' field-type='quantitative' max='47932.979907975467' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1v2s62a1spvpsg16zcppd1vinmyc].[Multiple Values]</rows>
        <cols>[federated.1v2s62a1spvpsg16zcppd1vinmyc].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{646E4B9D-3F3D-4DAC-9700-A2961C754469}' />
    </worksheet>
    <worksheet name='covid19_index_intr'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dist_covid_index' name='federated.0e95o7h1l2q10515z6hu10rnwmmu' />
          </datasources>
          <datasource-dependencies datasource='federated.0e95o7h1l2q10515z6hu10rnwmmu'>
            <column caption='Covid Index' datatype='real' name='[covid_index]' role='measure' type='quantitative' />
            <column caption='District' datatype='string' name='[district]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;Bangalore Urban&quot;' value='&quot;Bengaluru Urban&quot;' />
                <semantic-value key='&quot;Bargarh (Baragarh)&quot;' value='&quot;Bargarh&quot;' />
                <semantic-value key='&quot;Bishwanath&quot;' value='&quot;Biswanath&quot;' />
                <semantic-value key='&quot;Boudh (Bauda)&quot;' value='&quot;Boudh&quot;' />
                <semantic-value key='&quot;Central Delhi&quot;' value='&quot;Central&quot;' />
                <semantic-value key='&quot;Chamarajanagara&quot;' value='&quot;Chamarajanagar&quot;' />
                <semantic-value key='&quot;Debagarh (Deogarh)&quot;' value='&quot;Deogarh&quot;' />
                <semantic-value key='&quot;Devbhoomi Dwarka&quot;' value='&quot;Devbhumi Dwarka&quot;' />
                <semantic-value key='&quot;East Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
                <semantic-value key='&quot;Gautam Buddh Nagar&quot;' value='&quot;Gautam Buddha Nagar&quot;' />
                <semantic-value key='&quot;Hissar&quot;' value='&quot;Hisar&quot;' />
                <semantic-value key='&quot;Kendujhar (Keonjhar)&quot;' value='&quot;Kendujhar&quot;' />
                <semantic-value key='&quot;Lahaul and Spiti&quot;' value='&quot;Lahul &amp; Spiti&quot;' />
                <semantic-value key='&quot;South Salmara&quot;' value='&quot;South Salmara-Mankachar&quot;' />
                <semantic-value key='&quot;Subarnapur (Sonepur)&quot;' value='&quot;Sonepur&quot;' />
                <semantic-value key='&quot;Upper Dibang Valley&quot;' value='&quot;Dibang Valley&quot;' />
                <semantic-value key='&quot;West Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[covid_index]' derivation='Sum' name='[sum:covid_index:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Action (District)]'>
            <groupfilter function='level-members' level='[district]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Action (District)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:covid_index:qk]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#aa0000' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:covid_index:qk]</rows>
        <cols />
      </table>
      <simple-id uuid='{8A8AC8BA-81C7-4223-9ED0-DC0D7577EB2A}' />
    </worksheet>
    <worksheet name='indicators_bar'>
      <layout-options>
        <title>
          <formatted-text />
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='dist_covid_index' name='federated.0e95o7h1l2q10515z6hu10rnwmmu' />
          </datasources>
          <datasource-dependencies datasource='federated.0e95o7h1l2q10515z6hu10rnwmmu'>
            <column caption='Density' datatype='real' name='[density]' role='measure' type='quantitative' />
            <column caption='District' datatype='string' name='[district]' role='dimension' semantic-role='[County].[Name]' type='nominal'>
              <semantic-values semantic-role='[County].[Name]'>
                <semantic-value key='&quot;Bangalore Urban&quot;' value='&quot;Bengaluru Urban&quot;' />
                <semantic-value key='&quot;Bargarh (Baragarh)&quot;' value='&quot;Bargarh&quot;' />
                <semantic-value key='&quot;Bishwanath&quot;' value='&quot;Biswanath&quot;' />
                <semantic-value key='&quot;Boudh (Bauda)&quot;' value='&quot;Boudh&quot;' />
                <semantic-value key='&quot;Central Delhi&quot;' value='&quot;Central&quot;' />
                <semantic-value key='&quot;Chamarajanagara&quot;' value='&quot;Chamarajanagar&quot;' />
                <semantic-value key='&quot;Debagarh (Deogarh)&quot;' value='&quot;Deogarh&quot;' />
                <semantic-value key='&quot;Devbhoomi Dwarka&quot;' value='&quot;Devbhumi Dwarka&quot;' />
                <semantic-value key='&quot;East Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
                <semantic-value key='&quot;Gautam Buddh Nagar&quot;' value='&quot;Gautam Buddha Nagar&quot;' />
                <semantic-value key='&quot;Hissar&quot;' value='&quot;Hisar&quot;' />
                <semantic-value key='&quot;Kendujhar (Keonjhar)&quot;' value='&quot;Kendujhar&quot;' />
                <semantic-value key='&quot;Lahaul and Spiti&quot;' value='&quot;Lahul &amp; Spiti&quot;' />
                <semantic-value key='&quot;South Salmara&quot;' value='&quot;South Salmara-Mankachar&quot;' />
                <semantic-value key='&quot;Subarnapur (Sonepur)&quot;' value='&quot;Sonepur&quot;' />
                <semantic-value key='&quot;Upper Dibang Valley&quot;' value='&quot;Dibang Valley&quot;' />
                <semantic-value key='&quot;West Champaran&quot;' value='&quot;Purbi Champaran&quot;' />
              </semantic-values>
            </column>
            <column caption='% of Elderlies' datatype='real' name='[elderlies]' role='measure' type='quantitative' />
            <column caption='Full Immunization Population Percent' datatype='real' name='[full_immunes]' role='measure' type='quantitative' />
            <column caption='# of (More Than 4 HouseHolds)  Per 10000S' datatype='real' name='[hh_more_than_4]' role='measure' type='quantitative' />
            <column-instance column='[density]' derivation='Sum' name='[sum:density:qk]' pivot='key' type='quantitative' />
            <column-instance column='[elderlies]' derivation='Sum' name='[sum:elderlies:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_immunes]' derivation='Sum' name='[sum:full_immunes:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hh_more_than_4]' derivation='Sum' name='[sum:hh_more_than_4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[urbans]' derivation='Sum' name='[sum:urbans:qk]' pivot='key' type='quantitative' />
            <column caption='% of Urbans' datatype='real' name='[urbans]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:density:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:elderlies:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:full_immunes:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:hh_more_than_4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:urbans:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Action (District)]'>
            <groupfilter function='level-members' level='[district]' user:ui-action-filter='[Action4]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]</column>
            <column>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Action (District)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Multiple Values]' field-type='quantitative' max='1.0' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Multiple Values]</rows>
        <cols>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D61C6136-251F-4BC8-82DB-BB0B8F489A47}' />
    </worksheet>
    <worksheet name='state_cold'>
      <table>
        <view>
          <datasources>
            <datasource caption='state_data' name='federated.0h7vq3n0mfuke61c6bpzd0m49zqp' />
            <datasource caption='Table 1 (cold_data)' name='federated.1v2s62a1spvpsg16zcppd1vinmyc' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0h7vq3n0mfuke61c6bpzd0m49zqp'>
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='% of Urbans' datatype='real' name='[pect_urban]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[pect_urban]' derivation='Sum' name='[sum:pect_urban:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1v2s62a1spvpsg16zcppd1vinmyc'>
            <column datatype='real' name='[CCE per CCP]' role='measure' type='quantitative' />
            <column datatype='real' name='[CCE per lakh population]' role='measure' type='quantitative' />
            <column-instance column='[CCE per CCP]' derivation='Sum' name='[sum:CCE per CCP:qk]' pivot='key' type='quantitative' />
            <column-instance column='[CCE per lakh population]' derivation='Sum' name='[sum:CCE per lakh population:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Longitude (generated)]' field-type='quantitative' max='12154591.411527999' min='6114556.8132085325' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Latitude (generated)]' field-type='quantitative' max='4310199.970774685' min='847246.86347397126' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per lakh population:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#cfe6e1</color>
                <color>#afdbd2</color>
                <color>#92d0c3</color>
                <color>#76c5b5</color>
                <color>#5dbba8</color>
                <color>#46b09a</color>
                <color>#31a58d</color>
                <color>#1e9a81</color>
                <color>#0e8f75</color>
                <color>#00856a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per lakh population:qk]' />
              <size column='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per CCP:qk]' />
              <geometry column='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Geometry (generated)]' />
              <lod column='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[none:state:nk]' />
              <lod column='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:pect_urban:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[none:state:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true'><![CDATA[CCE per lakh population : <[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per lakh population:qk]>]]></run>
                <run>Æ&#10;&#10;</run>
                <run bold='true'><![CDATA[CCE per CCP : <[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per CCP:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#a0cbe8' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Latitude (generated)]</rows>
        <cols>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{45CC2B36-99E5-4448-8B81-C6CCDEE62821}' />
    </worksheet>
    <worksheet name='state_tooltip'>
      <table>
        <view>
          <datasources>
            <datasource caption='state_data' name='federated.0h7vq3n0mfuke61c6bpzd0m49zqp' />
          </datasources>
          <datasource-dependencies datasource='federated.0h7vq3n0mfuke61c6bpzd0m49zqp'>
            <column caption='Cold Chain Points Per 10000S' datatype='real' name='[cold_chain_points_per_10000s]' role='measure' type='quantitative' />
            <column caption='Full Immunization Population Percent' datatype='real' name='[full_imm_percent]' role='measure' type='quantitative' />
            <column caption='# of (More Than 4 HouseHolds)  Per 10000S' datatype='real' name='[hh_more_than_4_per_10000s]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column caption='% of Urbans' datatype='real' name='[pect_urban]' role='measure' type='quantitative' />
            <column caption='% of Elderly' datatype='real' name='[percent_elderly]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Cold Storage Capacity (Litre Per 10000S)' datatype='real' name='[storage_cap_lit_per_10000s]' role='measure' type='quantitative' />
            <column-instance column='[cold_chain_points_per_10000s]' derivation='Sum' name='[sum:cold_chain_points_per_10000s:qk]' pivot='key' type='quantitative' />
            <column-instance column='[full_imm_percent]' derivation='Sum' name='[sum:full_imm_percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hh_more_than_4_per_10000s]' derivation='Sum' name='[sum:hh_more_than_4_per_10000s:qk]' pivot='key' type='quantitative' />
            <column-instance column='[pect_urban]' derivation='Sum' name='[sum:pect_urban:qk]' pivot='key' type='quantitative' />
            <column-instance column='[percent_elderly]' derivation='Sum' name='[sum:percent_elderly:qk]' pivot='key' type='quantitative' />
            <column-instance column='[storage_cap_lit_per_10000s]' derivation='Sum' name='[sum:storage_cap_lit_per_10000s:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:hh_more_than_4_per_10000s:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:cold_chain_points_per_10000s:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:full_imm_percent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:pect_urban:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:percent_elderly:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[sum:storage_cap_lit_per_10000s:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Multiple Values]' field-type='quantitative' max='8055.2947524483134' min='0.0' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Multiple Values]</rows>
        <cols>([federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[none:state:nk] / [federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E7E78E8E-B620-4448-B6C2-2C5CFE8BE504}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Cold_Chain_Infrastructure'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='8' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='6' w='98400' x='800' y='1000'>
              <zone h='77250' id='3' name='state_cold' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='20750' id='5' name='cold_details' w='98400' x='800' y='78250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='12' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='11' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='77250' id='3' is-fixed='true' name='state_cold' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='158' h='20750' id='5' is-fixed='true' name='cold_details' w='98400' x='800' y='78250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CE2E1949-CD0B-4DEA-94F8-132A424C5E99}' />
    </dashboard>
    <dashboard name='Priority_Index_Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='14' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='10' param='horz' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
                  <zone h='73999' id='3' name='Priority_Map' w='98400' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='24001' id='11' name='covid19_index_intr' w='21000' x='800' y='74999'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='24001' id='12' name='indicators_bar' w='77400' x='21800' y='74999'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='18' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='17' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='73999' id='3' is-fixed='true' name='Priority_Map' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24001' id='11' is-fixed='true' name='covid19_index_intr' w='21000' x='800' y='74999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='184' h='24001' id='12' is-fixed='true' name='indicators_bar' w='77400' x='21800' y='74999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2168C35E-7FDA-47C8-B850-EA85E6F4C8EB}' />
    </dashboard>
    <dashboard name='Vaccine Prioritization' type='storyboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' preset-index='1' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='vert' removable='false' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='1' param='vert' removable='false' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='12625' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98400' x='800' y='1000' />
              <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='85375' id='5' paired-zone-id='4' removable='false' w='98400' x='800' y='13625'>
                <flipboard active-id='7' nav-type='caption' show-nav-arrows='true'>
                  <story-points>
                    <story-point caption='Priority_Index Map' captured-sheet='Priority_Index_Dashboard' id='7'>
                      <capturedDeltas>
                        <worksheet name='Priority_Map'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Latitude (generated)]' field-type='quantitative' max='4310047.124110722' min='738771.68687582132' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[Longitude (generated)]' field-type='quantitative' max='12721150.462390579' min='6590880.2619666317' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                    <story-point caption='Covid Index vs District Index' captured-sheet='District_Index vs Covid19 Index' id='4' />
                    <story-point caption='Cold Chain Infrastructure' captured-sheet='Cold_Chain_Infrastructure' id='8'>
                      <capturedDeltas>
                        <worksheet name='state_cold'>
                          <style delta-type='added'>
                            <style-rule element='axis'>
                              <encoding attr='space' class='0' field='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Latitude (generated)]' field-type='quantitative' max='4281447.5995188551' min='903852.81677821383' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
                              <encoding attr='space' class='0' field='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[Longitude (generated)]' field-type='quantitative' max='12228898.830628965' min='6337745.0336436201' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
                            </style-rule>
                          </style>
                        </worksheet>
                      </capturedDeltas>
                    </story-point>
                  </story-points>
                </flipboard>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='19000' id='8' story-point-id='7' w='33300' x='54200' y='51875'>
          <formatted-text>
            <run fontsize='10'>DistrictWise indicates the Different Dimensions like Health,Demographics,Cold Chain Facilities Etc</run>
            <run>Æ&#10;&#10;</run>
            <run fontsize='10'>Higher The District Index represents Less Share in Above Above Dimensions</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='9000' hidden='true' id='9' story-point-id='4' w='30100' x='70500' y='73500'>
          <formatted-text>
            <run fontsize='9'>Covid cases data for few districts have zero cases.As a result the the covid19 index became zero</run>
          </formatted-text>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' flipboard-zone-id='5' forceUpdate='true' h='12000' hidden='true' id='10' story-point-id='4' w='33300' x='8500' y='32000'>
          <formatted-text>
            <run fontsize='11'>Districts having Higher District Index and Covid19 Index should Prioritize First</run>
          </formatted-text>
        </zone>
      </zones>
      <simple-id uuid='{05E637C1-CCF4-42FB-A5F5-1DA76CD940A8}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='193'>
    <window class='worksheet' name='state_cold'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per lakh population:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.1v2s62a1spvpsg16zcppd1vinmyc].[sum:CCE per CCP:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{3056CD72-409A-4C48-AD25-68BC25E01B10}' />
    </window>
    <window class='worksheet' name='cold_details'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.1v2s62a1spvpsg16zcppd1vinmyc].[Multiple Values]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]</field>
            <field>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5B6D39EC-7A12-4A71-ACE5-A3D1B03C470F}' />
    </window>
    <window class='dashboard' name='Cold_Chain_Infrastructure'>
      <viewpoints>
        <viewpoint name='cold_details'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='state_cold'>
          <zoom type='entire-view' />
          <map-navigation value='1' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{F4432158-7548-4D1D-A54A-A0556AECD5A6}' />
    </window>
    <window class='worksheet' name='District_Index vs Covid19 Index'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:cluster:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0cnjf411ozp39114b75iy0xfakgo].[none:District_Key:nk]</field>
            <field>[federated.0cnjf411ozp39114b75iy0xfakgo].[sum:clusters:qk]</field>
            <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:District_Key:nk]</field>
            <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:cluster:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{15BC97D2-C6BD-4B8A-8B48-F9F25D53943F}' />
    </window>
    <window class='worksheet' name='state_tooltip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[:Measure Names]</field>
            <field>[federated.0h7vq3n0mfuke61c6bpzd0m49zqp].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97D63990-4B8A-426D-9C09-67872D472687}' />
    </window>
    <window class='dashboard' name='Priority_Index_Dashboard'>
      <viewpoints>
        <viewpoint name='Priority_Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='covid19_index_intr' />
        <viewpoint name='indicators_bar'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{42E3D28D-4B21-4E72-9DED-8B31D54E6A7D}' />
    </window>
    <window class='worksheet' name='Priority_Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:dist_index:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:district:nk]</field>
            <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[sum:dist_index:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E6150287-9C05-46C4-98D6-34189DF820FC}' />
    </window>
    <window class='worksheet' name='indicators_bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[:Measure Names]</field>
            <field>[federated.0e95o7h1l2q10515z6hu10rnwmmu].[none:district:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4D4ED5C6-7E71-4A53-9ABC-E52121604915}' />
    </window>
    <window class='worksheet' name='covid19_index_intr'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1DB52BF8-5458-460A-B348-A6F275F268BD}' />
    </window>
    <window class='dashboard' maximized='true' name='Vaccine Prioritization'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F4B75A47-8F8A-41A8-868F-3AF24F753F5B}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cold_Chain_Infrastructure' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='District_Index vs Covid19 Index' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Priority_Index_Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Priority_Map' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Vaccine Prioritization' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nNS9d3QcV37n+6mqrs4BDaCRAwEiMAcxiaISJY00GmnkCfLMeMLaE+yzu2+T
      7bfvzO55zzv28Xq9fs/27r6dtf3W9gRP0gSvRhqNciJFMWcSJAEix0Y30OhYnarr/YG5xUKz
      GwQpzdjzO4eHALq66ta9v/j9/e7vSoZhGJTR3Nxc+Z9MkiSJZDIJgNPpxGaz3XSNzWYjFosh
      SRKGYVBTU0OpVKL8UYVCwbxPLpfDZrMhyzL5fB673U4ul0NRFGRZNu8lyzKFQgFVVSuOL5vN
      UiqVUFUVh8MBQD6fB6BUKuFwOJAkCYBiscjS0hLFYhGXy0Vtba05pnJSFGXFHJRTPB5HVVVc
      LheyLK94V0VRyOfzzM/Pm2MyDAO3243L5ar4vPeLDMMwx5tOp7Hb7VXnTlxfgSXIZrMUi0Xc
      bjeyLAOY/1f7DizPlSzLFddfjMs6n5Xutdr9b4fsdjulUolisXhjDJUEIBwOmwwnJtB6WalU
      QtO0qpNps9mYm5ujvb0dTdPQdd1k4nIyDMNkWEGapqGqKoVCYQWDGIZBLpfD6XRWfEFd15Ek
      CV3XKZVKOJ1ODMMwGTwSiVBfX0+xWDQXRlEUJEkinU6Tz+cJBALoum7ey0qSJJl/E4tv/Syb
      zZLL5SiVStTW1ppzFY1Gcblc+Hw+SqUSsCwUMzMzeL1eAoEAhmGg63rF9xKUTCbN59tstqrz
      UCwW0TRtxXy63e6qCkvQrRgtkUjg9/tv+rtQDmL8kiSZ7wmsWAdgxWeVxrDa75VIkiRmZmYI
      BAIUCgUCgQCpVAqfz7fi++V8DFB9NlYhVVWJRCI4HA68Xq/JbNbFdbvdZLPZ5YfYbORyOex2
      +02MU0mbu1wuc7BWia22QJIkmVrebrebmmphYQG3243D4aBQKFAqlcx/4v5i0cQYYrEYuq6b
      TFlJaMVYyjWXw+HA6XRy6tQpUqkUpVIJu91Oa2urKZSCdF2npaWFaDTK4OAgHo+HlpaWikJg
      GAapVApVVXE6nUiSRCwWWyEApVIJRVFYXFw0hU2Q9edqtBpTivcU72zV5mI9VVU118ntdpPJ
      ZMx7CmEsV4J3wuyVaH5+Hq/Xi9/v59SpU9TX1+N2u1lcXCSdTlNXV2da6Lq6upXvVs0CVBuQ
      oijMz8/T2tpKoVAgn88jSZLprkiShKZphEIhcrncjQdZGE5VVXOhhTa22+0rrhWTZrPZVgiI
      ECTx3VKpRDabNRlW0zTTalitWKFQIB6P09zcbAqLVRiFUNjtdqLRKHV1dei6vsICVtL6lQRE
      zANg3qMaCUs0NTWFx+NBkiQymQxut9t8/3w+j9vtXjEPxWLRdEuE61goFPB4PKtq+WpUzfUQ
      ymx+fh5VVVFVFUmSUBSFQqGwQjhuh4EraeM7pbm5OWpqavD7/QwODpoulyzLdHR0MDU1haIo
      pFIpent7V47jdgXA4XAQDocJhUIr/OVisYiqqmQyGTwez00aRTBLoVCgUCiYTCwYq1gsrvDv
      he9vJeFKFQoFc3FsNhuapmGz2czxqKqKzWYzta6u6zidTjKZDA6HwzTZ5YsnFjaXyxGLxXC5
      XBQKBerq6szPV3OL7pTy+Ty6ruN2u1fMuVAYd8LQ1ntYxypICLyVEcvXW6yhUHCSJJlCYLfb
      0TRtVcvx8ybB6ACTk5MEg8GbLLPf7yeRSLC0tITH4yEYDK64R8WZFRNTLXCx+nOCRIChKErF
      74hBiQnM5/M4HA7zWuEmGYaBzWarqllTqRRut9tk4mw2az7T4/GYVqdYLFIoFExNmsvlKBQK
      K/xw6+KL55VKJVwuF5lMBr/fTzqdJhaLmZNbyRK8VxJmupLSeK/MXy5Qq31e/pn1Z4fDQTQa
      Nd0psda/aAFwu93Y7XbT80in0wC0t7dXvL5UKuH1evF6vRU/rzq7Vqa1TkYul8Pj8VTVFkLz
      Cn/PysjCAoh7lk+y3W7H4XCgadoKtMZ6D7vdvuIeQkvn83nTuogYwur367pOTU0NuVzONOPW
      cQlSFIVoNIrNZuP80OtcuHKUjevuxTffzMaNG28ZqN4uFYvFm5TJraiaVn8vZLWC5c8Qv4sg
      E24ggKlU6n2fk9Uok8mQz+dXoHLvhdYkAHDDH4xGozQ2Npp+dCUSwasgYUmE++JyuapqNiEI
      wqUSGl7cx+l0mr6/iDuEzy3QJPEcEfxmMhlCodAKn76aDzo/P09tbS3/45Un2PZoifRijMVt
      3+XaqMrJC3XscP4+W3vvWzFPd0ICgZqbm6Otre22hMBqrd7LGMrvabWGYl5dLhepVMp0Ua2Q
      6j8U3YnSqEZVbbmVUUSgBssashpECMsLK3xwm82Gw+EgmUya/rjf70fTNNPHF4wgBEoEfQJP
      twqDcJmE7+92u0mn0xSLRRNqK5VKFAoF877CrxYWwbqIViEX5rSxsZEXXv8W3XvzzI5kmRrU
      GD5bZOp6ioXkBMcv/eSmd74T0jSNsbExmpqa7ngxrUH+ra6rFKuUf9c6N0LBiDwJ3LDuv8xk
      GAaJRMJEKCsGwXNzc6ZWFRNSKBTQNM3EVitBYeUBiK7rxONxZmdn8fl82Gw2M0gWwV02myWf
      z6OqqumvJ5NJAoEAuVyOfD6P0+kkFAqZVkRYDxFH6LpOMpnE4XCsSDTBssDGYjHq6+tN16oa
      CRhRVVW+9tN/Q9s9o2S1IoeeH6Ojz0c+W6K23sfMiQ7+8He/VzW3sRqJ6zOZDMB7SoRVYn6r
      QN8Kb7dq/HKos9K9heatln/4RZJA/ISVWmsskkqlCAQC5PP55cC+mgAIlACWJT8ajdLU1GS6
      EdUCZCtDCJhOlmUSiQQ1NTVMTEzQ3t5uYtuSJOHxeEgmk9TW1pJIJFbkE4Qm9/l8JhohECQr
      5Cm0VCQSWZGtFAsmrJF1AvP5vBlwi+ztV3/4Twm0JZmYvUKwUUXGjuIoEpnKEWhYxtQ9XeMU
      Lz5Jp+tJ7rnriTVNvBCW6elp01rV1tauqr2dTieqqpqZ90p0p1nSSshPNbdQ/D2dTuPxeG77
      WT8PEkigqqpomoYkSWtWJqlUygyKq8KgYsGE65LL5VYkVIQAWCWvkpkVZQ1i0JqmrcgmlqNB
      1nsJl0XkDsQ9rAIgyijsdjs2m43FxUWamppWYNTWd9B1HZfLZVozTdPMwFiWZQ4N/BXeg98w
      x3H6JwapBYlUcnnc9S0uOu4dxeGRiM1IdI19ix2b7uNW5HK5KBaLzMzM0NzcDLAm16ccplwr
      s1fT8NbPK/1c6fniGl3X0TStKqLyi6JEIoHdbl9hiaxMfSsSsLPL5Vo9BoBlLSzck0wmYyIo
      lVAe6/cEImNN3qiqelMqXQS65SQsjZDy8utzuRy5XI5sNmsGxplMBrvdzvT0NLquk8/nyWaz
      xOPxFUk7AY0ZhmFmVsUzQs6dDB0KMPguJBdLzI1rOGuyrL9LQVYMNuzxM3JmeSzBFoNB1//F
      0tLSLSdd5CpSqdSK7OmtINVKiM+t3K5KCFul39ciUNZrhEV+r7mJ90qCJ63k9XqJx+Nr+r6A
      7DOZTHUBsJKVQa5evWoyXz6fNyEpETMIH9Ja0JbL5SqiBqVSybQA5aTrOna7vSLc5XK5TPfA
      4XCYga/D4TA/EwJgGAZer9cUYrvdfpPl8vv9SJKE0+mkvWETX9x1mM9tOMmRr9Wy4yEP09dz
      zIxk8bbFeO27swSabjBNw84RXot9nIXF+VvOYz6fx+v1UigUKBaLJuJ1O1RN8QiqxtTinSu5
      rmslRVFoampakeG3jukXRR6Ph3w+b8ZR1vHdzj3cbnd1ASiHQCVpuQq0r68Pu91uYvZWhMEK
      L6qqahauORyOFS6MwHKF6yEWplgsmkIlBKzauESSSwiY8OWF8FnRDCs6VCqVTO1lZQRRTmCz
      2TAMg9OX3+CeT2u09dvp2KjywGdtpJd0gl1LLI47mR0ySC4YGAbE9Wt878QXq1aSChJWLRKJ
      mAFlJev3j5V0XTfzQIlEwixXuVOBei9ULBZvUpw2m+22guFkMllZAKppGGE6BFmzoiJAFRlY
      m822QrtZy5uFQKiqSjqdNv114evb7Xa8Xu9NBWQCNhX1Q+KlnU4n6XSaeDxOLBZbgRiJ8Ylk
      2GokYNpIJMLGrruJX+nn/Gt5ho7LXD9ZxKY4SEQkNt5jx27zMH3JyQ9+Hxpb/YRT5/npyT81
      tVI1pmhqaiIQCNwSR6+mqYUwi7kR/8RnP29mFNl6UWSYyWRIp9OkUikymcwtlcD7QcLilGt8
      p9NJNptdoVSq5atkWcbtdlcOgqPR6ArfVFiAxcXFFSl7TdMoFoumW1EOQVbKFgtXRSyi0LjW
      eEEIYCwWMwvErO5QOp02oS9ROhGNRs36JMMwTA0hLIuIXazoVjX/W5IklpaWSCaTnF76Yzq2
      FXj3xRlqemZo32rw3H9LUhNSCLbA5vtUrhzJE1/IseujGWaP9dOS/Tzzzh8QKjzBY7v/1Yr7
      ijzGzMxM1epPMVfWuSj/rFzTWetiboeqIT93SiLuAsx9IO83JZPJFeUw5SQ8CbvdbiqaQCBw
      0z18Pt/aBQAw8fTyCsdyHLkSaiEshBASsaegvABM13Wy2azpYgnhcDgcJBIJ06Wy+rQOh4NI
      JLIiwBZML4RBIAblFmU1kiSJkfEBzsz+DWn1ClMzI8iKRP9eN+lYiYb1eRxuiZe+tsjBLxaw
      l8Hj01dkdsff5Pj1b/L47t8Bli2AEDCXy1V1c8pq4xSC/w/heqyFJEmiWCya1kJYbWs5t5Uv
      MpnMbeVDRAyyWk5HXCdcYqGohWCIfQNrEgC4gZuLCFxkgytpJ+t3YHkB4/E4Ho/HlFrDMMhm
      szgcDlKplKmtRRGaFWmSZdn080V8IZhflmWWlpZugsB0XV/hJwrf1TqutQRuqqry4pH/j4sz
      P6KgzrDzgza8QYW3v5fk3k/deP/TL2nIrgQ9+wyclqEkoxLjx4M81f4T3I4aWltbGRsbw+fz
      mSXct6LVAtt/rEJQiUR8Z0206bpuwtHlG1iqUSKRAG5UHdxKEAQJgVhRer9WAYAbhWKVKhcF
      WWFQm81GsVhE13VzkEJoSqUS6XQaWZbNxBDc2FVUnomOx+PU1taa1sG6+ygej5s7ucrvIa4R
      GWXhzt0OaiHGsrS0xDePfJZEcQSp4MWwpSmkVXrv05gbLmHPdVL0XcffkmTdjpXTqr/2FR7b
      86+YmpqipaXllq5HNTfyl43pVyPrHJRKJcLhMB6Pp+KuMystLS2Z1bnC3RFVBLdLt13XWw4h
      wg1NKnw/kVUVgxN1PeW1JmIPbfm9bTbbTfsBRA1RpQ0mwkpYE2cC1RHm2Cpkld7hVu8ci8UY
      Gx/BXmxm4pydgx/t5oHHN/PI032EXJvxSJ0UDY0dj9hRqeH0sy60xI17nEv8GSPjV2lpaTHv
      We1Za8XoxbtX+vn9op8n3m99P1mWaW5uRpblFds5rSQ2NVl5QKB/d6oUbvvtKrk8YrO1yMqK
      gFj45+UkIEBhisrrV6xWAm4IlKj7EcVwguEFZGq3282tg4KsG+qtTLXWmn5FUTh6+mXeufA9
      Dj7dzr1b2snb5jj/dpz2fidNnS6yKYNkMoVuaOhF6Nxqo3Orl5Mv52np17l+Clp6U5xZ+K90
      dfyPWzJ/+c9ibsqZvdLC32kwXE7CvfB4PGa2/BdR+1+OHgp+Epa+vr7+prVzuVx3XKZxWwIg
      BmKl8hIJK8NXwmqtfy9fYDHBIsgR5RCiDghgdnYWu91OJpOhqamJfD5PbW2tuSlGlBwIEnGC
      GP/t0sDAZWydZ7m3tYeLxybo2RrE41XZfrCO73z1GHWBJj68809oaf5j1u1L8M6zYXZ/NM/C
      lE54WMLplzjwyeXnZ19vXlVb3colqpYVriY0t0ti+6mmaaZrKmpsVit/fz/J6XSSSqVWxAhO
      p9NMIlZTXLf73ub+ldv5kiQtlwz7/X5z++NqAchqg6rkh1srPa0bbNLpNJlMBpvNRkdHh4ks
      CFRIML+YMGEdRKxQnr8Qz6/0ezmTtbe38xfPnqe2wYUquzn8+inSSzJd2520r2tk6xMx4kcX
      qCk8hGL7MXs+EGLw5Bj5jEJrr4uN997IVsY4a7pr5WCB9bm3YmRVVfF6vWYpeHnS8k5JIHOw
      rKQSiYRZrvGLLIO2AhrCst8KJfJ4PBU7QVQjoTjWHAPk83nS6TRNTU2k02kikQjpdLqqvwbV
      F2Mt9S9C2BwOB36/n8XFRWpqaswEkGh1Yt2CKQRDmGxR9CRe2Prya/WXk8kk2x7Lse2pKAn1
      FP72OE98ahdv/GCKLbtbePObWSKxCXb1fJw3vlbC4ZKZOK/iC7jo6mvk/HM1DLy1fK9sLsM3
      XvmXPHf8DyvCzOLnWy2g6Gf0XlySShi61VqKsVhx/X8IWmupiGBo0Y1jLdfLsrw2FEggL+WM
      K8uyiQpVCkxFtWY5iQK2aqQoCtPT09TV1ZFKpYDlREa5+1DNZy4UCui6bibRxOfWmGKtAnD0
      xNsMlP4TWkJn9HKKex/eQW19gJ98/xiNG5Lk0tDarzB/zYPsi6LaVXY+4sHukpi5nmNuMonq
      zpJJFjEwyKWhd5eTuzOv097WdVPGd63tSQQJayKy6+l0ek0a0Ov1msrLqt0VRTGz9v+QG97v
      hGKxmJnwWk3JCgVrGMatXSDhD1a6oRVPL5/01ZIbqzFfoVAgEonQ2NgILGcTxbOqLWylhRKZ
      4lt1dFuNVFWlpC7RUddN/R4H6dQZBi/O0FjrZuem+0hqEbTEBLH5GaKxBA8+7uHy4QIXDiXZ
      /ZifC2/k2PZEjlCnDCxrskzCIBPX+dbpj7N95rP4bJ3cv+tpM24RAX+1d61WESqqb8u/JwLZ
      YrFoKhOREBIuZzabXQFDi41D5UVv5eMQFhdWF9xfBBnGcmHhWtZ4hZtbyQLMzMyYNfOVSk+t
      NxKYbDlZN6tYSZIkMwFW6bOFhQVz/661xmW1lymffGuFqTXxdjsIkCzLy+jP2J/hrE0wP6Lw
      oX/m5dJLAR69+zfQ9RKKIvP8T3/EVOIodsVLrhSjsUumtd/G2DnY2LeNicgFtj62HAcc/q7O
      xEVwB3We+jdOFFUim4JTf7GHf/3pv8LtXoliOBwOkzlXK4W+ldUQjCFcGStad6ckLLK472qu
      cKUxWZG594sMwzBzQpXiIisEL6iiBVBVlaWlpZvqJ6wkyzKzs7M0NzfftAB3+lJiUqx+uxXz
      rSbd5al18ftqk3CrcVwfuUqi8y9JXI7iaTMI9eucfcNg/EqCxOy3cQd1oqN2UvazdG93o0V9
      FG0amaUCrX02WnoMLvwoyfyCzIVXIb0Em/YFaOpZAmQWZwxCnRJOLxQbjnHkzHM8dv9nVjCF
      2A9dLQBdCwMZhnGTJn8/fHoBV4strbdL1ZTRexEKSZKqgjKV7itJUvVq0NV8dFmWCYfDNDU1
      VdQ+q/XvhOoaS5hUqxtQKTEkmLySFrHuGKvE7GsRgEKhwInY7xENJ7n7KQ92VSW9qNDVG6Jr
      bwbn+vPsf8qLt67Akw/9Bk3G48jZBhoa6+j2/grZV/93fvyVBnq3BalxtxIMedj3RIBYWKep
      RyIxL//MLVp2iWqaZOwf/EO+fmk/xy89Z27fHBgYIBqNmht6yufq/dSet0vJZJJkMnnbzG+N
      vyqtr7UE5r3QWpGg2yqHFp8tLCxU3c8qSiCqfb9SLsF6b+umjUqWpZJAWMkavJUjP2txfcR1
      qUQBmwpaqkRBs/Ho0/00tLuIjqlMXZbRiyV8DQWymQIYCuGla6QSBbpqH6SrcQ+PfWYdp96I
      0LUpyPhpB9EpncS8wbEfyAQal8eRyxgMHC5QyOsoNonue+JEer/Md57978TjcYLBIHV1dYRC
      IZLJ5Ipuerdj0X5edCcCWD528bt13d/Lu1Uak1Woyvmqogu0mnZJpVIm9l7+EEVRbonwZLNZ
      XC5XxftbWySuZiWswZd4tvhMbNIp1yJrmcxUKsm7l75PTD7G7FQYragwNZzAV2Nn9HISWZHo
      3CqRWLChpXWkfJDT114kEY/zyOdqmR3Nc/rwSboe+DGNHQot7XVoSxLumhL5DOx90g24eeXr
      SyxOFZHVEo3dEvOjy3OxMAWhyX/HYx/8lIloiC7cfr+f6elpAoGAmREX7/zLRILJyxN51iB8
      tXjnVuRyuUweK6dKOZjbrgUKh8NommYGmmIzuugWd6sFKUeMBKPGYjHm5+fx+/03aXCry1Ou
      ycvdoTudPEmSOD7wLI0PvMOG+4o89LF15BIqHd0hdtxfi6e2wLsvzOANyhRyJV741lVmZqZw
      +LM8+Mla3vx2msaGJuy9J2jbIBOP5gnUuth2dyu5hTpcvuUxL0wXaet1snFPgEJaIblQolRU
      SEz56Jz5c/Zv+AyyLBMKhUxXUPjbjY2N5gaUSrD0LxNZNX85z5R7CWtdS8MwqgIsVrIqzFU7
      w1Wi7u5uotEopVKJmZkZZFlecQCGGLzVjRIvmE6nSSaTZqGaYHTRtto6KdaJEIxgvVelly8v
      grsdkmWZOOepB7S0zvFXZ3n415rIpIoMX4qw+R4/2x7wMXU1yd1P1jA7kmPuWoZkHMYuZdn1
      YCPBBjuT40PMfTtMU906ClmFC8emeeyzPQxdcpMOThKZKKGlDBJRg+6tXubHdZrXF4iOuHly
      x2Nmya6YA7FLzjCW90UEg0Hy+Txzc3M4nU6zPf0vC62GAFnf2zBulL2X02oQcSUYeTV3vKoA
      rKbJ/X4/2WyWUChkFinl83lTUwnUwequiJbpzc3N5u4s8U90bKj23NVMpiCB+a+V+cuFc2Dw
      HPUbZwE7Lo+Cy7sM/bo8CtdOp7A7FZq7XMyOJznxE432jnbQk6zf4mJ+Mstrz0yxZX8NvjoZ
      VXJzz6PLbbiPvjaI26uy/e5ODj0HJe80vXe5KemQSenMDIeRXQW6Up8zcfzysVn/F8WAotFX
      LpfD7XabzcXer5aBvwgS7ynKzUWjAEVR0LIZjlx4npa6jfR37b4JCatkNWDZBRJ7T8qfU4nu
      SADsdrt5Womu63i93hWSXen7Yg+BqM0RyRhxpJH4TrnkVtIS5S8lJF+0bVkLWb8vyzKXF77J
      +k030u4bd9Vy6rVFdj9Sy8f/eQ/h8SxXjyWYv27ns//HJgDWbfRz6s1pgg0OOvr8yIqEMbmf
      QF0zx167jCRLzIwtJ5+KhRKJeRuRAQeJmRIHf8NOXYvK8EWV3n066hHPinkAVuxhKKdSqYTH
      42FxcdHsXr2wsPCeWi3eLolWibcTh5TvdDtx4WUul/6Q9uxv0dd6Hz5fgNHpc1zSv0LLPdc4
      erKfluTLFRsyl5NhGGbJ/GrXWKlqKYTYhliNFEVhYWHBzNTeDlVibDG4Spq9PAYod7XgxmEZ
      Yn9yJcEp/44kSWS0DK8f+zvqDhzi2uk4+VyJYsGgkCuy4yE/3sCyQC3O5ahtcvDi12cI1ntZ
      t9HH+OASE0MxGjpknG4ndz/ayuihFgL5e2g4+CYALz5zGV+txOQ1jU9/4Ulee/kNCvkiNoeM
      zaGTihdgsYd/+4X/aS6csGYC0q3kE5dbREVRzHLh95rkWguJMYhKzbUKnXUN0pk0Xz26lX2f
      XE4ULs0oXH4Tdj5ZxP2zFNT4Dz9MwNnJ0/f9wYqu4JXum0wmTSDEWkO0Wrb6jnc7VNqYvVaq
      ZOZhpQ9Xqfeo9bpys2bd9FKJ+cu/I8syxy+8yOGrf0ldR5HxN4vcdbABp9uGXixx9dQSbz4T
      prbJgazINHW4GTy9wK6HQoxfTZIvaux7vI756SQNnTbmxjS++UeDlLQ5HjzQwLGvRgltipBM
      L3Lvp+pIpnOMXIngcfvY9pESL/5FDsVexBeSsftryBdyeNxeMwZIJpNmjU81cy+KAsV7e71e
      pqenqampMQ8ZsWrD9zN3YBg3WtOvlaxdPd469Qyzrf+eZCLNyGmJ7l1Q06LjDGAyP0Dn08+T
      XoJLQx+kp/2uisGxNZZMp9OmF5DNZs39Bdb3tirQ24ZBrdfU19cTDocJBoMVS45Xo6GhIQDq
      6+tNH7A8h6CqKjMzM7S1tZnugIC4rAwtoLPbWeAr1y6T6fwWB3fWkk4UMAxwupenQ7HJONwy
      ux8O0dJ9w5fs3rK87+HKySU6+r28++IUNd0LRGa87P9IgGeO27hwaoya0Gvk5Qh1xTo89nou
      vZOkudPHyMA8hifG2VddPP2lvZx45yL9DyVR7Vf56+98ntZQP3u7vsC69h4zdrLCguJvi4uL
      OJ1OfD7fCpdPdMMWTaMSiQSdnZ0VS0qqWeHbofLGVKuRoigcHfwG19JfR/EvMKPNcVe/gaHC
      zFVIRGHbI6A6IZ8FuxOMEqRisHT8AR7evnXFHFiFSbxPsVg0t82KzVLZbPamWjYrryhf+cpX
      vlI+2HQ6XfGIonIyDMPc0JxIJMx+i6Knz2oTHA6HTcRmbm6OdDrN7OyseSrL+Pg4NTU1hMNh
      XC4XV69eNdsLRqNR3G632YNImPzyVozVsoqSJHHq+o+o7V8+DtbuULA7V+Y1rp6O0bXJg2q/
      MQdDZxNMX9fIJGByUEOa30ZmugV3a5iRMwZ9d9WgZ3z07PBg9xa5//FN9G6r49QbYbYc8HL1
      3DyL0xIPP7EHl1ullLeT0GaITueZm0hy95O1TCTe4vihARpquvB4bj7czjAMhoeHcTqdTExM
      EI/HzbmfnJwEIBgM4vF4zM1EopzC2sPJKgDlSFs1kiTJVHS3sxVRkiQymTR/f+LLbPzYFXwt
      aVr6JU78LwktCckF6L4LLr9l4PRKDLwlUSpKTFyU0RIS8289QNr/FiTb8Hp8eDxeZmdnSSaT
      eL3eFacEWY/KEq6QaLog5s9KFQVAFMGthQRcJaovw+Ew9fX1N3VtLqdUKkVfXx/xeNwMpkTk
      Ls4WMIzl+m6Rc5BlmcbGRvNQPLE1UhzXKrrRWbvEVVqMC9cOk+98Fqe7+jvWt42oobQAACAA
      SURBVLh458dhurcsl1RfPLJEPCyzYWcTXRtr6d0awpndQLv/AO6t7zJxOc/8mI7NrYFsEA0n
      8fv9uL02kotFUukM23f10LetllNvzlPIlxi8OMfCYhRyfnTNRe/WOrwBlYXUMKMLh2lw7MXr
      8d2EgolCRbHAgrFFa0jRIU2SJLM8emlpyYzXxLyVZ13FM0SVqBWqttlsxONxMpmM2fVbnMZZ
      nphcyR8l3jn5Esf4NE27xhn8/n580/+EbPAwPXslZq9BS59CdAJqmmB+RMIdgLaNEvXtBsMn
      ZUL7ztFy/znm/d/k7OzfMj5QYEffw/j9fqLR6Ip6KeH6iTPeYGWD5nIBqOgCrdaUaTUSPXus
      J7FUo+7uborForkRGm4cgifMfrFYpKGhwfxctFJsaWlZNR9gs9l4/fTfUOfvYHvPI+YCCYj2
      3ZG/YO/m1Xvcuzw2ahocSLJEbD6Hz9FKyZXEX2tpsZ4JMjJ7Cj2xgb6WGjINETLKIG19Ooe/
      40W1qVw7HSdQ4+fUm0mcB9Ns3hPi4U+5OfLTaVo2GrT1dTNxRWPT9ibzvht3NfDumxc5W/hd
      ai99gb3bPgDcyKIGAgGzXkjkCcrdT7EXQyx8c3MzExMTpNNpmpubSSQS5qFxYq1Eo4JTZ44x
      XPpL0vkon9n1I2RZJplcFmixYy8ej6NpGplMxtS+kiRRX19vdvpTFIXJqXFOlX6LnbsMJAni
      3REe7P4C33zzFQaUk7gDEvLwh1maf4difoENByQmLoOWhPHzMpsfUJi6qlPMgztg4N6eYDr+
      EyTpt8nn84RCIeLxuKkgBV/U19ebc1F+bJeVdyoKQLX6/7WQOBHmVhbEOghrEk1gweKaUqlk
      mjCREFqN3G43zx77PXwPPsO5sy76s+9y6tJrzCnPky6EwTeNf3ucs4f62Xl/Q8V7pOMFrpyK
      of/Mek0Optm4sQt1WmFqOElTh4czb8QoTA5Q0yyz76F7AfjOt36ILttYmtO47xNB5meStHQu
      n6tl8ybxdmu8/eo0LU1tFPQsG/bUk8/pDBxN0dyqc+SFaeyOZRdudlRi16M5Xr/wZYbt/xkl
      spuP7PsD8/xbod3KDyUU4ITVFTSM5Z1dwWCQ1tZWNE2joaEBp9NpHoou1ju6EGFw3Ydp6Cph
      XzAYuT6E1xMwT1n0eDymtRewq6IoZq3Sa6+/yqZNmxlbfIup2VG0hpfYeL/O4W9JNHRBsGmW
      +fkwTtXH3R81OPxfNvPwvt+iVr6LYfUPmBlwsHDNg5R04QnOUN8hEWiwc/HVEjufKBI5tYlt
      8h+vcLHFvuHyylmhwB0OB/F43Iw1hachy/Kdo0DVSBxbtJbDmauR1TSLhla3skTiZRcWo2id
      z1Bjg3V7NL57+i467i0RUiVCP7v2ylsOzh+5SjErUSpJbNjjJ1C3rClzms7Q+Th1LTb0vIPT
      P5GZHFbYs8+B1+/g9OE0seks+x9ez/Xvd5HMTphjUI0gH/uNXRx64xjt/W7eOBXD8EwzOajR
      t8/OyNkCRT3LS9+/RP+uAN//Lwl6N7Xxsd/cwqvPjPPEZzahKMuMqKWKTF6LUddeonnrEr4L
      B5FlmbGxMdavX29qWZGLEY3ArMqrHPYVx09Zmw8Eg8EV11y4chylefnz5HgDrS0dTE9Pm26R
      ruvEYjGzJ2symUTTNAKBAIlEgqmeLzJvz5GvKTEXAWMB2vwS938Ojv89jB8JUHjgUyy5x7l2
      RGFb02cYS7zG1czf45SbmLiS56l/1sTRn0SYHCgh2yTyGsQjcP6Zbn7znp+uOKpJ+PvhcBin
      07mizszqhdTU1JhWzloxXDEGyGQyt11KIEh0jyuHnlajcvTG6pda3ZdqJBYwlUrx2vznaNqy
      aH4WbAFZufHdK0eK7Fn36/iczWzY0E9v73ouHIkwP5ugsdPB4R8mqPO3osVcGDk3+w720dpZ
      x7HXR3C4bfRtayCX0Tn7+iL39T/FfPY6Ld3LuF1tbQ1z4Tm0ZIlAc4HFaAqdHPEwlAo2kJbx
      +kJe5/Ev1RKe0Hjg8c3Y1GVrqcgq7p9loPPZEvZgnMSCTmyugDx3Nxv7tnFu6BWeP/dlppZO
      MDuZ5O2r/5XI4ixepdXU9NadUeXIj7Ufq7CwIkEpyzLnFv8rx98aJD5vMHrKyZbmj9PZ2Ynd
      bl8+HcfjwW6343a7TTTO6/XicrnweDxkx3uQopuZyRxl54fAZpeYHDDwBmWuHXLRtS+Jblti
      4rzC5Bk/NXuOYu+4hNvlZtu9QeKREk6PQn2zE11JsO0Rg9YNMqpdwSmFuKv1izc1FHC5XPh8
      PrMMv1J3Qmt8Yz0p9H0XAJGQyGazazoAwjpIsSjid5EMKj/WtJxkWSajZXhx5pM07Bpe9VnF
      vEF2ppXNO9fhdNuRFZnO7iYGzyQZHUiy/8EtdPbW0bouSHPH8k43l8dOc0ctZw5NMnlKZZvr
      k9y74Qki0QhxxzCqusxQEyNhJDXH9v1tvPbdWTzOIH3rN1NS0uz/UAOzoxn2PuEjEFI5+3oS
      LVlCKXmpb/ZQ1+Tiypkwk9cTnDs6gZZNMDeVIhV20NPTgxEYJna9kUT7X7JhnwtPY5yh6WNs
      /4BCXL/C1dNL7Nn2MD6fj1gstuI8ZEFCoVgPuLDmSGw2G68e/xr2pkmS8yrtPT6ajA/R2NhI
      Op02IUVJurG7zO12m+hQLpdjXetm2mp3MJT7GsG2PMW8xPjhFjzj/4SW+vWs+8AAs4MSbZ31
      PPiJWtJRhZf+SqO20UE8WsTtkznx0gK5UgKPz45/7F+gDv8a9zf9CVeGTzATGaKv9UBFXF9A
      5ZXgeGsiVAj+z8UFUlWVUChELBa77dxAJUuwVkE8PvBDGg6uzvwAzT0K50dfpCv/JVT7jTjF
      H3Sz64Heqt8bujhPKetgQ82DtP7siKOOtnZeemmKYvAC4YtpZkYKfPZ/ux/DMFicLfD4J7aS
      z+po0RouvJ0gl5Y58eISsiIhySUe+5KfodODHH0lh8MpE53NEqpvJhgqsvdDXi4eVUkuFuno
      W3YnX//en7J0ZZGakEIsmmLsrEp7n4eBoxn6N18jkYgTCNRgYPDCa9/lsQefRlFsNzG+te9S
      OdXIG8EfxxO4QqG4SEZLmQfLCXBC13X8fr8Zs8HKfRg2mw2b4Wf4ZJLJw13s3fA0DbYDnLny
      BtMvGKQjTtY94Ob064tcP5/mqX/ZxtXTEfJKkYEjWfoPlAiF6tmu/DF9zQfNzPinD/wl18cu
      VVwfEUeuBboX/WhVVb293qBrIaFNRLvytfSTKTfHgmRZNqV6NVIUhedP/gH+h76zpjHOXtep
      WfxV1vWGzL8thFNcvTCDrpfYfqAZX+DGM6+cnWH4TJKn9/xrasr6Vv5g+Hdo7pOZGomjqCUM
      LcDSrIrhiBLqLjI9lKOU9VIXbODCyVG+8OcOMkmdQz+I4a2xsTBup7e3n969JdJxnVKsE7fX
      QZoR/LUqr/1wmJYuH5GpLOvvUuno93D9fJKirtFZfzeDFyNs2u8kUOfk2I8Mfv2J/8Tg0BVy
      rS9w8ViE3sCvoDmu0lm7j819+1Y0Iq60DqOjI8x2fJk3v5ln771byWaKFBcacNcWaHM/yIb1
      uzh24jAnZ7/KunXttEgfIZNdQlYL6HKaxYUlCh3PY1BiYdLgwY+2AXD4xVG2PpZlbkTn4ptF
      whNpdj7kIxu307zexbsvzLD7wxKxSBZttJ9f2/8/6WzvJpPJVK2HKidN06ipqTFPBhJkdQet
      2ePZ2dn3VwBErxoBR93qFEQrWQXAWgJxq5okwPT/3x76UxaM43ha52nouzlLaRggSXD9dJGt
      wS/gD968aSKXLTJwfpzt+5cXbm4qwejgNO29fqRLB+hp3UDA7ye6uMhSPM542//LhaOzNLQt
      lyxsu6+GU69HOfArQc6+nsLhsuPy2CjqOTo3unjn+XlaeqCpV2LgnTxbDgQYfK0FxZnh7g8F
      OfdGmvrAOk4fv4CnFkqSxt4P1uKtsfF3/3GMnh1etJSOouocfPBRtHSeU8fOUyyA6pAoxdrw
      17g58OSylfrqHz3Hl/7DNi6+5KHW3YVN8uCxtXDvvg8wNzdHMFiDqtrNNTt68k0WWv+MpcFO
      dt/fxeGXrtFxYJJgg4qWKvHSN2Z48DdkRs5n2HxQZ/h0keETTgL1KqF2mfBYEU/QIJcxyMV8
      HPxYK0NnMxx7MUI0usCGfU5qGlV6d7nQ4gbxxRzj16MothLb76vDeel3eWD3suWytrFZC2ma
      RjAYvKkWqhwUEAo3kUi8dxdIRNbiGFWrH38nqfbyitLVXCDrBHm9Xj686/eRZZlnj34F+m5Y
      g8XZEjMnWyikXDhaRinkJTR7Hl+N86b7O5w2cpkSh14+x8x4km13t7D3keWGtq+e/C5RVSM3
      3EzOPkN0IY07Z6N/l5dMqkhTp4f5qeVanvNvaWw9UE88WuDy0QUe+EQtsiyx5e4gL397kq5Z
      ldb1Hvx1Npz1CzQHtjI3Ns2Ohzy8/HfneeDjzUxOzLFpXxP/67+Faen0097r4Z4n64mF8/zg
      z6cIuWdIJNLc/aFGDj07TbBVQuoYY3FKYW7KjaLIJLMRBs/FuHBpkM/8Cwc2VaZYHOKr3/0p
      efc1/MW76Ghbx/zcEgX3CMWcxMylEu3OXt56boDhSwkMNcCEUkRHw+4ukUtLZFMyx36oE51w
      8MTnejn+yiyR6RSJsIMdD9sIjxe5Ppfh0Hd0dt7XTf89UT791HJMNXymgCTBq9+eZ/tjOrUt
      MHzaoDi2l0cPfNZ0q8oz+7fim3IFKv5ezlvic4/H896DYAGDiZ7+71exlRiwyEZW6h5QTuJv
      xy/+hMnwNWYGVEpGgekTLdz/2GbWbQgSCrZjLzUSjcQYG5liamSJ9nXL+YDkUhabKjM9Oc2u
      D9lALtDZ3YzdsRwrzM2G6dsn07QpS/N6G1NDGvufqkFRITJZpLbJzsDxGB19NfTtDHD2jSUk
      JBpaXZx/O87IpTiyJLHnSTttfQ5GL+bAkMjOdNDcVsuhF4ZJxXNs3d+ATZVYjKbAUDCKErvu
      66K5PcRffnmAQtrN/Y/spm9bA0ffvsi1c/M0tPrILMls3dvCwpzGy9+/THNHLZs29xIKNRBf
      TDM9vsjMaJyp4SXa7hnBFyrgbY3RsGOS4akzbHlyntnZOZjbwT///H9AyYdoaehGk8fZ83AT
      V49l8YYKzAzpjJ4GX71BqL6BQJ3K9fNLqKodRbYxdVVHksBfb6O7az3nj42z7YkEducyT/lq
      Zd76Tpp7P6dx6e0iWtzGQ5/zsnilg7t6fsV0m0V7/bVUJaiqaib3rO7daslcWZbfuwBomkZd
      Xd0do0blZE35CwEQm0DKryu3FrA8aacnv8Fd+/pZv34dxcVG2rrqcXmWjZ1NlQnUOQi1O2ju
      cjE6sERbRzPvvHGG2cgY0+FRWvoknG6Z4z9NIEsKdoeCy6Pi8/m4dHKalp5lDHl+Ikc6UaS9
      301sPk8iP0HX3izp7BLXjur0bguwbpOXmpCduYkENl+K+LxB3x47NrtE83ob73zLQb19O8Nz
      7/LIP6lhejhFdC5NbF5n7nqJ+xv/M7ZCE4nRZs69O8kDT62juaWBrg31XD0/y6aHNcJjBTbu
      aiCfLTFwIobH42XPwQ6mR1KoDgm7087Y4Dyt631s3FXH6y+cI76QJZspMnhKIxYukFyAUy8U
      aPT385sf/TMkSaK5sY316zbQ6L6LwYsz7On+DNcm3uXqmTBbD9qob1WZGExy7u0lnvxSMyVd
      4tyheZo36Exdy1LbleTq2TAd9qe4fsRD813TKKrE2VeyZFMGhUIOtx8UVSebknC7XWxv/rQp
      ANXWvhIpimKeQFRuAVbjzfckALK8fDrLWhuSruV+5fi1Fbu+FYnvROfieDtmKeRL1NQ7Teav
      RIqjxN9//SiPfzFEa4+T5i4X3oCNb/7RdbR0gR33hZifjTNwKkxJl7h2YRan1+DcoUX0os74
      gMbldxO07Vqka6eC0ytx9qcQqFdJRAwkWWbgdJiu/SmKxRJyyc74pRzx610Ex3+bA9ue5sF9
      T3N+8G0Gr4yz6+Fa1m1xMzoQ48F1v09nRw+65sRp91C3eZL23gCnD02yrr+Oc++Ok4qXMAoq
      jR1uOvp9SNJyq5WWdX4WI0m6ttk5eWiExz6xCZtN4ZVnrtPUl6dvn53FWZ37PthD/4562tf7
      GLmUpr11PWQDtDR2mu6Ex+2jv2M/TY1t/Oinf83D/yzDwmyWiZEF3LU5FmZzJCIwNhSmoSfH
      /k+WCI/nqW2D3R8pMBW5Qrv7YeYXZnDVZbh2QiOTKtLSJ5PVdEbOGmx8oEBD5J/T0bjVXBvh
      1twqBrDZbCbPVqoWuG0BsB7mvBqJ+pD3Q/sLSRUpfmHGRCHcWp4hAun17TuZOBlk9IxMaFP1
      83sLOZ23nh1j92MBsqkSvpplzX79whKJ9BKP/MpmGts9hFrcdPb7yWZy6MUSdd0ZNt3jpmOT
      g9SiQrDRTs+BZVw8PKITDDSweX+A5h4bC+E0sYUkS5ECSzMKW+4JsH6HB/vY03R3bmAo/BbR
      SIxiwzHad6QZH1zi6PNxfHUGeeco50+MUr9plkPvvIbDVyDU4iURy/L3f3OWnQcDbN3bxPot
      tbzyzBCLqSmGziTo2GzjzIs6QV8L8+EIEgqzY0mKSgzkArotjpbUCYRULh3SmB1PkojnOPDh
      EBNDMVLqRRIzTpob1pkMJYoeX3v9Jeo3zpDTDPb/qkQ2CRsP2Nh4MMeGe2XGz8sk5zwszOTp
      3SNz5kUdb6NG3d3HuHZCIzqfQjdyRCcN8jmD0DqDUIfEyHEnH9n9xzgdN4AJke1ejRftdjvz
      8/NmC8hqsHuliuCqLpDoDS/LsnkItrXITVA6nSYQCKyK9YvTHf1+vwlPCWYX9xX/u91u83QY
      6+bw8qTNrcgwDFpa2sjmUtBweUUmGOD4a5NMjS4xO7HEg5+sx+VVmLym0djhppAvMTo0h9Ph
      YNPOthXPC9Q5mJiconf38nimh3LMXXOS1fIkEylymRJvfQNaujzUty4LUyCkMn6pQF2zk3Nv
      xcmlIVBv4/zIT8mu+wHB3af40Q9+QqApT8cmB1qqiLc5xbUTGXZ/pEByxkPvhk76t7byxluv
      cH1ohM6uZmQFMvIo0yMpxq4u0rAxQSKq09lbS32Lk9babXT1NnJ9cIKp0Rg1rnamxsM88PEQ
      Z96OUNcKqTkv81NZGtvdhNqcjBx1MXUthxKcwbvpLC+/80366j9swtC6rjNc/GvimQjjAxky
      CZ2xCyXsLpmxCwUOfSfPo59upWOjiwuHkhRLeWRbieZeiZomiYaeAqmYjqIa+AMetj0sM3Ze
      pxht47fufYX6utDN5coV3B/rfpFsNmtmp1eD3K2utfX/igJg7TYs9u+KsmNRJiuEQaTDHQ4H
      TqcTt9ttHlwmynNFal6ULYs0ujjt3XpfIZmFQsHMJlsHvVZXS5IkOtp6OHX8IjUdN84qmh1L
      4Qjk2bjXS8t6J7H5PN/986vsPtiCN6By7OUpdj1uJzyex20PcOHEDJPDS0wOJbCpCsmoREOv
      xtEf6YRqW9GlFPs/4qSxJUA+4WbTPj/z4wVaem7kES4cjjM5mGTH4zrXjigszhXQiwagc+VN
      G49/tovwaBFD0hm9ssj2R1Rqmg2e+aM4jzzyGF6/k7GheS5fOUegQSaXKzIxPsWmAy5yeoya
      jgyzl908+JFOTry8wEJiisHBIQZGj/DQr7Zy18MBXv3pEYLdCywsziOrReYnS3T3N3L/U828
      /eMJHKEo2mwTj39sH0aqjoFDJXq6NxGdTdFQu2wJ8vk8nb4PoKdq0Apx6hp8+J2tLF5toLdr
      K0uRHA6XjdE317EYjfHglzLEZiWSUYnG9RJz1w1icwYut43mhX/L9MJleg5kcLoc9Ht/Hbt9
      JdxdrQxGKM+lpSXzUA9rO81KVZ9Wprf+XjEPYD3OtBpZMdX3KwAWJGBVa3fnas+oBruaxV2X
      zmJs+xrJWJ7rl6MU9Rx7P1gLLBecXT41x4YDEqefUwkGA2RLC2x7yEExX+LNbyd44jeXy5Rn
      R7NcORljZlCnvl1m9719NHd6OPrqGE19eVp67Lz4tTAdm1Smrxrc81QtAyeWaOvxcu10jN67
      dQbeVvnA5+qYvJolMmaw82E/Oa3E2OUMl09GUHQ/dodKaGMEW6GBvQ+u59zrKWrsvTS3NjCZ
      fp3uncuw4KvfnqWxW6FzR4nwaIGgpx3V5iA49yUyMRtvXf8j/CEZPWfDWZtmKZYgk0kTanOQ
      TUnYFIW+XV7e/fESnVtVurYrjB1pYP/uRxkfWqBVfoKNGzfjdrvNgzNkWTarUYPBIIqiEIlE
      CAaDppWORCKEQiGKxSJ/8Y0/pOuJ48Tm80Tn4ywsTfPg50tce6OGxpn/k4Glr+PqucDc9RK/
      +4ELBAI39pcXi0UymYy5h6Hcy3A4HCwuLt5U8mEFR8pZu7xlStVaoLUEneWm5P0mYSGEZbCW
      SZc/c7WcQ0tzK++eeJ3JqQm23Oemc6OHxGIBh0vhhb8d595P2VFUiSvHkmzZsoNCwsfxF6Ms
      DoXo269TE1Ip5Ep87/8Zo3lDnobWAJvvDnD+0BKNbT6mRmNEZzXqW21cPJzk/k/4aFwnc/j5
      ObY/KjF4eom6doPOLSqJqE5Ll5d4pEhtkxN/rQ1Jlhi/HmXX43aycQePfXod+biP9q563D6V
      5vUOllIRjh66wKb7VN54JkxkLoGWySPJEjktT2Jeoau/HsfwZ9mz5TEii9P0PrhA/5YWIuEY
      dz1u48rxBPFZhYc+s9y9or3XQyCkopcKqA6J6aEMketeklNBPrDrX5DPL7eqGR4eRtd1s6eT
      pmkUCgXGx8dZXFw0dwPGYjGGh4dRFMVscPb2+Fd4/QcTPPH5DrJJiYmhJC2Rf8fAkSLXM9/C
      5/ey61NhauIfZVf3r65sWfizTU3l5d6wzMhi16Io7BNkrW0q/14lHrljAfh5khmgWM4krtaE
      tRrjq6pqbo87cfVHDJ5fwGv0E77qpBir58wbCer74vjrZVSHxNJoHdt29dDcEWDrri56tzRw
      4ViYlj44+0acUK/GrsdVsvk0p1+L09qnMjaQ4sDH/MyOLOcFFJtCNl0gvlBk/R4Jf71C2waV
      maECjetsxOZ0Tr+UxeV20L11uYjste/NsO+jtuUGWU1t+IIqtY0Ozr+9RHuvl/lJjchcHJs3
      zfP/c5JN98tkEjoP/lqAhk6ZIz9KERkvMXUtT4fnMRaXwgwuPovqzeL12zl/ZI5wOIKWzfLR
      L23i1b+L0LXDxqmXUlw/l0a2lRg6lWXXkwoLo2421X+C7dt2mNtPxbGlPp/PLLkWByKK3WDB
      YBCXy2UqrZqaGkZGh7Bteol4IoEqeRgfiqFd20VbVx1x+QyXjsbY0vZhlrQJDjb8FS6n66Z1
      tZZ5W6uLRUWn9Wjc1fhitdjxH6UAlJPYyWV9KVVVSaVS5gSJTdAAo2PDnLn+LENXRwnVNXNl
      7gU8tTr3HdxN27o6GlsDbNjSTn6hjvlrAS4fXWT6isxd97aveG54LMfQuQS7/L9HzP0iM0NF
      YnMltt5Ty9DJAg/92nL+o6Ze5dQrSdLJDNsPeliYKTJyPouul8glZWYGnESn82x7SOXqOyBh
      Y248TXgyQyaVp3uniqxILEyohFqXz7udHEwxMTqH4Z2lZ3+e8ITGBz7vp6lLJTKh09rrQEuV
      sDlLbLjbTlOHG/emY5w4fYRY8Qo5ZZKLRxJsCvw6afsFCsYS9fX19O0I8vb3F3jin9aQXCyw
      5wkXffscXD6sYdNaCTl3Mjo6gpZZbnzW2NhoxoOyLBMMBk3YW1EUmpqazMM0amtr8fl8jM6e
      4+vP/gc8DSmwaVy/FMFZF2fDU1dJOU+Bc4E6xxY2b+/hgZY/J1RfeWOSdcurtduD4AeRIxAK
      s5oyXA1F+sfD5auQsAbipBPDWD4N5P/+5udo3ZJGVmRUl04p0kcpFSCw4yyhLQ6GzxZ5c+on
      7HpC5uzLK0+Sn5mI0b+thVSilvqpWk4tXrnpuU0NrbRGPsbGjVs4f+gu7vrkOJK8rEnm1klc
      O5lm4qyLmq4lJAkMXSa5qDN4qsCeD9bjcEkceibFhz7bg2KTOP3jabbu8zM8EKahW6J7h51z
      by8vmq9W5vTIPB29AaavZyhJOWYmFrjrKT/Hn9PYftCLyyujFw3knwEjU1fz1DbZCHXYuPBa
      hvZ+F+t2a2SKGh2bbEzVRqiZ9/LBHa/w1W/+e/x1E6h2mXUbannn7xcwDIO5kQLBJhvRa/Xs
      P9BNqFhLR/s6AC5cuMg9++8x40GPx2OWRPt8PgqFAqVSiXw+Ty6XY2p6khff/B5J79vU7rjG
      289l6b/HINQDpaJBsBVGjkGgUaJtyxlmLxd5KPg7VbW40NzW3lAC6q6vr2dhYQGXy0UikTAF
      UiBWawVMfmkEQJz6kUql+Mmbf0tJTrN+b4HOLdYTwqd/9m95wdbvtAE608NppsYTvPP2cRrq
      2rh0YYh1e1K8+t+dNHa40dJ5PvTpfv7uz4/Rd1cQZJ1cPs3sgJMn7vkQAX+A9Y33YRjjzAzm
      uH6qiKKo9PBFgr2zNDzyCgDhCQcv/+0C/XvdNHYuw6C7P+Th4tEI+x5t5p7HO8gkiyTSYXp3
      O8hnSyzO6hx/Lks6XiIYcvHid6/iqsuw59Ea1Et2Zq4XaO5ROP58ggc+uZyviFyrIdybpSn1
      efJLOQqN3yOvwfVzKRbCGpMjaUbOKXR3bKK+po2h64P0dG7nje+dwu6QMXQ77pYSrjqNs28X
      cWlb+ORv7OLKOwU6dqwD4MVXnqPGX2/W+YuSFGttjkDoDMNgeuESL1z8Mq7OCJsfUBk5A5se
      MCgWSxgFBy2Lv43vzR00ld6gsFgiGTtMLqWsKYYUaKAoi1AUhdnZWXPz0TRSMQAAIABJREFU
      VW1tLZIkmSfNWxEhITDV6JdCAOCGGTt99hilrhc582KBD3xpdaRK0Pl3Imw84KZ7a4axy+fZ
      81Eb4fESB3+1hcZ2L8dfmufK+RkaNkVxNGbp3eEjnwNNW+Qaf0Jf8mssxuYZeVOjrtlOIZdn
      W+3v8PD+j/LCKz9g6lqWtn4njR0O1vXV4dSDDJ1coHePSsv6/5+9946O4z7vvT8z2/tiC3rv
      AMECdrGJXV2ibFmy4yI7TmI7xXHypvme5CY39+S9ucnN++Z1ThLHSezEUlxlWcXqlFjFCnYA
      BED0DmzD9jY78/6xmiVIkSq2ZEo2vufoSNrZncHM/J7f07+Pnv7X00wOxqlstGC2aZFiVuRc
      Fr1RJOrTsOdTbiDfBZZJyTirRQbPJViz18ZPvh6kslXE6oWu/UFCszLNG2zMHd7Mx3Y/gkGv
      5ycn+0F3DGNZkKZWkYYtWiYv5xg8IdO6RuI7r3+enQ+XsaeyiKM/itK0ykUkZGPmHIihNB1b
      6tAbtMjGWX783OMYjFqSmTSfuvvXgavx9uuTUoqiEI/HcTqdHDj9XbLaFLPnZSpaZaYva6hd
      rxCe0+DxWthSfw9j/jNUCrtYe9tmtFotgUDgpqwhi00aNdQZi8XQ6/Vks1msVisWi6VArymK
      4k9FG/+h8AEWw2pxcPJFHysenMBkfWd/o86gIZPQMNITpaRWz7Nf92HWe1i2vpSzh6eRsyIG
      E7Rvlxi6EMVTYab/VJzV20qxOrW8sP+HeNsCmN0JfGMCTrcFXckYo6PjTMg/YKhngUREZnY0
      zXB3vs/37JEJzDaR+fEMaNLMTUaZG5OobLTim8zgqc0gigKBMR3jFzVojFn6Tkdp3JyirEFk
      si9HZbOJga4kRWUiK3bqKWvUEJjM0b4ribdzkCNPT7O69Q7McgO9p/3U7Rrhu3+axOKSGO+G
      HfsaOHn5h5hdGYZ7/fhHNXirNFw5l6Cts4xkFJxuG2NX/MTmLIT9WVZvrmFkaIIN25aRCutw
      u/I9E9lstjA4W4XKvKbT6RhTvkPOMs6ybXp6ny3jD/btp3fuabJylNkhaC/Zx3D6MczZZZSV
      VJFOp2841G6xkKm5INW8Ub+vap7rWe8sFgsLCwtvG8JfjA8dwbzH4+HXH/19/EPvvOm+ts1G
      61oHRR4r515JsjW5GXNXCZdOzFLRZCAeTbEQ9SEIkMspDF4KMnwhhVYrEpxLY66cpWxFgNiC
      Qm2rg1W3F1HakiFd/BqJdJi7f83DitutyDmZlvVmnB4D7bdZEHU5jFaZNXstdO41kElLZDMy
      kXAUOQdnnpfZvLeNPQ+1MNqlY+qywuRlidCsQjabIx6WueNzRYTnBE49my+1KGvUMHw+iywr
      ZNM5/P55StzVbF1/N6d+LHHv79jIZTQkFvKvdv2OanbfvxKboZwVq5swa0vZfn8TBoOG+tZi
      Nu6qpbrRTW1dJXfdvw1vqRNPqQ1viZPBsfOFxWg2m99Eg6guylwuR0nmQebHZCZ6Je5Z+1Uc
      jiKkgR3MDMpEFlKcGvwuU4HLuOz5vMrNqjyvZ3BTm+/hau7p7YYCvtWEouvxodMA8IbtGS9l
      NHgEa9GNbzSTyjF4Kczo4DwTw0HOHvCj0+rJpGSUQRuuSiO9g1MocRGjJ0cqLnPlko81e+yE
      fRIWXRkDZ6NIcopYPELf6SizwzmsDiPRkISogee+OUZjp4muV8JEQ1n0ZgW9UcQ3qkVvT1Db
      ocPhUatQYaw/QiDoQ6PPsf9bCTbuaMJdYuL8kfxnuqIQle0CEZ/ClZMKUhp80wmqO0TGeyQa
      OnX0n8jS0Knl1LNpRO8Q3XM/YkL8TyZ93ZS0xSlv0lFWbyAZ0RAIzhOMjzFwJkFJuYPBvmma
      lpVhLzJwuStAbWMZGo1IaZWN0ZFJLAY3EyN+pofjpJIZpp49SdZop7KmBqBQbqw6v5IkFWqF
      TFo3Jw71sPLBeZr4ChaLFR8H6Hi4l8ikjYQ8i2SYYU/bnxZi+zer8L3egX2nJG2QF5JEIlFg
      IX87U+hDKQAAZcW12NObuHCmD8Hqw2DSkEnJDJxQyE2u4rUfzIJtltV3GCit0xCeE7ltbyUN
      y+0E/Uk+Yt3FFvsKwpMKSafMlrvbOPqTCUxUYaKSuhYPdc1exud6WL9PQzySY+tdzRx71k9d
      xUr8I0bK2uO0bzITj2RpWqsnNJejdaOJuZkAChJHfhhB1AiM9aR5+T8X2PqQmdoOA6X1Glbt
      MfDyt30kQgLmqnGaNmUZ605R2iRQ1qjBP5Fj+Q4dnioNI90JdHqFuX4z8+NZYgtZVt8rUNEG
      gZk0TWtMlLYlmbgsMXYpS3mTFrNTIStHUZCJRqMMX8ix/VczvPxfU1w6FsBZZKe6zsvF47NM
      XUkx2Z8hHtBTZKuguqqaSy+cZFXOilJfXxAAo9FIPB4Hrg4jVBer3W5n46q9hAcrWdW2FYCp
      2QmoPUAiKnGn9ylWFn+eIqf7TY35i3f9G5U+KIpS4I19KyhKnhTNarXmZwy8kct4K9xQAFT7
      7IMOp7OIVY13kR1bQaDfiza4ko/v+F9osm4cnacIB5KUNMqcezVGx+paDKb8TjI5HmVFqoO+
      mRkid/uwFRs49/oEs0MCD3x2OcOXfbR0eoiF0/hCM6SSKbSZEspqrJTWmBm5ILFhVz3+CYW0
      EqDIq2eyX0Jv0KLVy9jcGka6U6zabSGblWnfbESjFRm9lGW8R6LvCARm02x60IKzOknXiwm0
      eoX2TRa6D+TQW3K0b9ExcjHDke+n2fAgLMxoWLe7hOIqM1G/wnhvFvvYl5iKnULOaigq1TLR
      lyWdSTFyKU3EL3H6mRy33V2GlDQQjyapbNWSjdioarJx+dwcmaSIPlvBxi2rENBiEr3Mzfg5
      e+wCv1fUTJXTSdBiobylpWB+JJPJAimvRqMplCurtCmlrqbC+im2NfEf//WPVHXIvPhENw/u
      +WLB6VWTXItLXRYvfrUeTBWwd6MFRFEkFArhcrnelpThhuKRTCYLhW7v5sK3Av6An9bWNlau
      XMXMzAxPH/gHwrpTmD0SgQkNFw5ECU7J2Lblw3fJuERiUuRV3wUmdH70kzm8ZWZsliI2bm5A
      ysrMzE7x5GOj2Kr8GB1ZLh6Ah349H6kpKtEj68Jk0hLzozmWdYgYrSI2t5nu1xe48F8hqppt
      bP1Y3kcpqdXim8wiyHq23VOJRisyM5JEMIcx29Uh3jlqOsyIosCGe80ceyrBhVeSICg0dBoY
      /87DyMo0mt3DuMt0uMvc9B+o487VX2bi6UFq7z1N34k0enuSFXeJzA7JJCIK7lIjDo8Wh0dL
      +yYzT/5tjPoWPW0bbGSyWURHN9H+fK2N2apj//6jPPDgffScHeMbUoBdokjams+f3KgzT1GU
      gn1uNpsLkZtoNIokSVitNmpqaug/OcTgRBeZTBq4ursv5h9dbP6o517cFPVuoPoBi8tnboab
      6odMJlMofvqgQpIkvrZ/K+7UnZgqJ+np7mHfZzspEgSmhnO0Na+issbFsZnjDJyJMzc3Sywe
      Zv38PrY1dPCY+BJGk4aJKxHqyldSu7KK733rMVq2ymSlLJFkmprlOqQFFxrtohfnX4PSdyeP
      3tHIwa5/o8ixkZ7hozg3/gcP3KXjxX9Mc+aFvCMmagTmBgXW31FU0EBanUg4JFNS88b5tHrO
      Pp/D5MgLbXRBYdun9fQfz1JWY8Uo2Ck172Do1e+QMFxi2RYzJk1+PNVv7PsH/vM7f4ZS0kVJ
      SQMDLy5QXOLC49SRaZsD8o6rIEDTKjurVjdy+vkpdGYRk0XLgrYf2MDIwCw77m/hwAtn+MMv
      /zEAXQcPMt/dze1vZIKj0eg1DA3qjq0ufrWfI5FIFBafzVBOtGiIX/3HHF0Hj7O2c1Pht4u1
      isPhIBqNFhgF1cWvstm9041YzRI7HI63Xfx6vf6t8wAfdDNIq9Wyq/HP8VX+NbImTotb4vSB
      MVpXlWGzOpifTeNwWVi+rJNgKIjZ4aP5NgdngpdwBJz4ZB27Ho4ycEKmvNqLwahHY/fjKLaQ
      TunIhAXOvpCjfYWZi8fniIXTSP4qPrn3C3g8+fDgvm1/gE6nY+PaHXzz1CGClml0xjTr7rha
      2XhJm8TquPqoy+qMjL6cg1UwcilNfYed1vVWpKxCrEni3JEpLA6RVEIh5E9SZxHpXLaFyWPH
      UewTnHspSUlmGbIsc7H3FG13TxALu5gaidJ/zkfVR7y4S430XxDo+kkOg0FDKp3EZvZgturY
      dEct41fCTIzEQdES9EdJpdKUVRfhqgoxOjqKx+OhcdUqFt4IRWo0GqxWK4lEotCjodIQLt65
      VXOo0Dsy34EmYGP6CSufumMziny1hVUdkxUIBEilUgUmcFmWC81WcJVzyGAwEAqF8Hq9hZL7
      GyGXyxWmxagFlTfNNt+MFsVsNn+gd//FONt9mB+ce5TIQpzAiJXOVavZcedqAMaH/Zw9d4qd
      n7by9Df72LRuD7VNxVw+lqTOei+5dX+LIAj0HMlw7tgo9/2RxJnnMxhyFZTVWpkZj7JuX95u
      lbIKqYNfZOdtH7vh3yFJEt985k8wNp2gZYPpGmfu9HMpbrsrX/PSfyaCuz7JwlwOOWugYeXV
      53zwBwFKWiNodDLo4wiiwsnvW9i58jdYSI1Ts2USk01DNChhHPg8kYUU46avkVLmMVhAipkQ
      ksVsvb+cnCSz/wcT7PlkMecOLuD1lFDXdlUw5ybj/Pjrg1SUNPHwr24hMJug5zUt7U1tXOzp
      YXY2Pz/hb//P/7nGRFnsAN8o3KhWjkK+vdbtdpPL5QpsckDBnFpcSmE0GvH5fDidzgLHj1rp
      Kwj5Ae0ajQabzXbDOcDXQ+1TCYfDmM3mArGXTqcrhHRvqAEEQXhbMqoPElZ3bEOv+wFdwmdY
      CCYYPxDlyMvdSLkcC4lxtj2cV6sVFeXUNuUXoWKI0NbWyvNnzdSsSVLfKVKzvI6e4z1YHFrK
      vXZyWWhb4+Ho98cwOzRUtimEpBcIBndSVOTiZNdRUsosoqAjG9cjm6bxVOdwWm7n5DOH2fhA
      /iUd+E6M6sb833D+Rcj51jB7IslY5BAb7jZw8VAMW5GWuhVGDAYt3qIqDj7Xy47PKRz8Vytr
      d5ZQunY/2b400xM5Zkcy1GW+gre2gvPSfycdS5BICjStcBKYkohL/Rw9PMnsgBaHI89b2rnd
      yfHnpqlutqPRiHSf9DM3nuDh31pG7/EEk+dtrGq9n1T9RXr7+2lftgxFyVOxq3MAVLydOaIS
      9KrhznQ6/aaMr9pUpVac2my2wmcqZTtwjeCUvcHI906hMtdFIhGsb/gyanItlUrlyRxupAES
      icSHZvdfjNOX9vPD419h30fuL3z2xDePsfc3DGi0AkPnUswPGtl93xrGTzl45K4/5Jv/8Ddk
      kwOU5WpJpTP8oPtpSrbPM91jYN3uUrxlFvyTErfdUc3L3x/E7JQJXmxh67p72H/lL7jjK3Hk
      nEL3s8Xs3L4HQRCYHl+gd/AEOp0W/6iOmqoGpPlaNOYUa1Zswlnk4Ojrh6i4+1WOPRNiywMe
      hrvjZLNppCys2Grn1a8b0RcFKXY24XGX0D14mI379PQci5GTU7j1qwheaqL5kSPYXBrOHJyi
      c7eFAz8I0Lg5jqdK4Mi3bJSWu1i7I598Cs1nOL8/S3G5jfp2Nym/gwbdZ+loX/WusqdvB3VQ
      SjAYRJIkKisrC3SMKgQhP/9BbYFVfQJVE6hYPP3lp4VGoymMc9JoNIURUlVVVTdvifyg5wFu
      hIqSeiITThT7GIlYBt9MmKmJefS2LE6vnuhCijJvI5NXktyx5itYLVaGDh9jV91ayl0eTqT2
      c9tX55kb0NKxvhJkHeR0rNtZwcDZMFWOrWxZvY9Va1soKhewCLWENMeZvKhn6HUn0dgCI/0+
      Vqyrob6ukdqaesLhCHqXH6e+ic0bdmI05V+uzVrEUOA19AaBSDBH40or/afjrN5lQ9QIpH1u
      2trasZtL8m2jlb2M9UUxO2WiQQUsc2RNQ1S3mLlyLs54X5ymNUbqlpk58YTCsR9lePBLNVw8
      HCHil/FNpYgEsihihunhJOlkjg2Vv8Xq5Zvfl3c9MzNDeXmeUGxxwmwxFs92VsOi1wviYubq
      nxZqfkDtZnO73YXaog9dKcTb4SMPfALdzHZOnzlG2trNyruzBOdj5CQFOeEgMbCcB9f/FaUl
      pQiCgGv1Kr4e/d882f0ihs39TPQnGO5dwGqxsmFXFSs3lwCQ8rlpb1t2zbUMRi0H/76WBs8O
      mld42HifA43+WmdLh53ytgzGzufpunio8LnNbiUy7qKiyYRvMkU2I2OwKGh1Ii89NsVc8iz9
      PRMcO3mA05deYbg3RG2HnouHEnSsL6aqzksiAk/8/TSi1UfrVoXXn1rg+FMJWtY6+LW/bEZn
      ECgqE1m+WyDoi5NLG5joy7D3UQdN63Mk5Zn35R0IgkBpaWmhihPyTCOq6aQKwmJTSs3c3oja
      XA2T/izQaDREIhG8Xm+Bcc5ms314M8E3gyAI1FW3UGxYx8TYFHP+UeSFUjSj9/DAxj9n88bt
      15h3dXX1HO76MSU7fAyfhpx9nK2flBn63jZy4y34B03M+qZIyQEaKtdcc62zF19n3xcasDoM
      TI4EqGjSE48l6O8dY6Q3Qm1TMd4yGy//8AodW41kzVc4fyhEZWkDYyMTzCuHmOiPUd1qZejS
      Av6ZFKJGwFqSYtUePYP942z9lMLUmJ+NHxV56Vsh6jpFAiMm0nEorTXTssbBuUPzyEIasyvP
      sta2zoFWL+CbzCDnFIqr9VS16jjxkwUe+s0Wjj8XYvBSiMnhENs3PPS+vAfVSVYbldQqTnWe
      8+LEl+ozqEwgatZ3cYTpnfAD3QxarbYwSHBx80w6nf7wlEO/GwiCwLKWTtqb/4l4PP6WCT1B
      EGir2Uxfz3MYrDq0Xb/G/MwCn3voNwvfOX32DKn0eYL+CKN9IcwGF1PzgwQzfiAfVclm8mG/
      ltUuXvlRP7lMmGP7DZhtWgxGPaO9CWrbzWh3n+Pbj/WyarsTb66S+aFZtLYorZs1TH07h6fC
      QM9pmdCEnuikEf94hpp2M9MDMaradFQv0xIZMtC8Ou9UB2bSSLk06bgGKQ3oo3QdjhMatWE3
      l2L2Zjm/P40Yr2TNunpe+LcZ6tfJrOvwYh194H19ByaTCUmSCu2sKrcQ5Dml1FFFkF+kyWSy
      MPRPnXYD+TCo2pz/TqH+VqWDt1gshfOqwmQ0Gn8xBUCFIAgF7/9miMdjHO86QGmzDovVyM5l
      n8Z4nR26vH0ZU6cuExozcf+efaRSKb534kligxHCwSQOlwkEmdOHR0CToXOvgaHjFjbuqAZg
      BeVMjSzw9NdO0LSskjs/48Zsyy+EeDiDpyLvIBqtAqFRGyv0X6RozsF//8w2jp99Cem2/8G5
      Awo6A4gi5JR8CG/ySoLR3hihKR33/XZ+Mc2N5jjyvSz3fsnIleNRUnMeikq8ROU4vWfmkHUL
      xKIC+x9P8z9/7Z739HlfD1EUsVgshWny6vxeoNBPvLhpRX1Xap/BYhr3d0O2rDbT+3w+BCE/
      KdNsNuPxeAq7v5ro/YUWgHeC8xfPYrfZOfriKZpdezB8+s3Jv/7BQdYvv4f29nYATp1/lc5d
      NrSmTGHIRjyRYNtHdICO+fE0wUDgmnNU1Dm5/+EdnDgwcE0fQ57ZQWZ2JItbv5xO43+jqqEW
      gBdO/T2h1BCB/Sk0epFMSsLmFnm9y08yIlNUqmPF7TaSaRvwxlyveT2NZevo3T/CynuyPPbV
      UTZ/tZajL04zNxWjrDVHSaWXhzv+Dbvt2lkH7wcWlyarC1it8bmeyVnF9b3f1/P9vxV0Oh3h
      cBjIm2FOpxO3241Wq2V2dpaSkpICxYtOp/vF8wHeLbr7T9C50872XRuJJcKUmNsLGuDcxfOc
      HThKKqOw/fadhd+MTV3BXDNE74koiWiOyZEgA5eHSKckhi8mSM9Vc9u2lfhnE/SdCTB82Ye3
      3ILFbsDpsjLcP4u3wkwyLnGuq5u6VXo85TpMc3eBkEPJ6olEw0yU/QmVm0YYPiPgdNqYn0xx
      9uUUK2+rYPkWOw6Plif+YZi7fjuv7n3jCqe/b+eRR/eSDpvouziFs9jAqZf83PfFUupXmomO
      e9hQ/N9Y2bHu5/aMVQFQSdbU+DxcS4F/vaOrhj/VcKnqHyymx1FpM9W8gwqVuWKxllGzzGpx
      nUajWdIAudwiUqWFKH0nTpArspBKZshqI6zf0cxIv58zZ7voWLY8z4AgLwCw7UEvsqxw4MlJ
      Glc4qWkX8VYaOP7kPOFgCYHZNAbRQVoX4cLEjwjP6EjNVHLPZxoACAdS1HWK6PT5F+QXjjBn
      6mIsU4eQLKGvO0lJg4GOPVl8l0V2P1zN4R9GaF6TNxUySQVvtZZD30nhqRIJXSnls1/I2/XL
      VtUTfi1F0jxGw65Kwse30FyyjY9+fuX7xuV0M6g1PZBf8GazudBiqdYMLR5xdD3RmclkKgy2
      Uxe6Gjb1+XyFweBqZtnlcl0zv1j9R5IkXC4X6XS6cM5fegEoc9dz8Ut/g1hq55F/Psy49gl6
      vvsXrNvZiiCU5x3q1ZWkUyEOn/0+XssyYuEkOUlGqxOZHIxS1WylZXURxw9cxltpQGdJMT8k
      EgonQEkR146weYMeOafwk68N8dJTASxFCrKQJJXMUrc832pYd/skP/p7uOP3zmEwCxh+rCOT
      0nPheR0Gg8SyTSJOrw5FgaPPzKEIWXZ80gJYOP5sGHf7FC8/f4j7P7obALvdQWn2IR7a8tsf
      mLou1RFVp92ri/z6bq/FlZy5XK6QSFM1iMoIrTbELx7OLklSYddXZwergRCfz4fVamV4eJja
      2tolAWhsaGbsmUt89I1iKVnKcfTvnuXk1iGc29tpXVaXV7VGPe0ra5ibGaN7/GUiB2wkkwlm
      JhZ44AvViKJAZE7L8acSlFnX07mthTNd55kciqIU+xk+r2WyT8JRnmXjx0NEgzLpOEz05pBl
      hYg/R+r4r1Df/H0M5jDjZ80Mn5bRSTa23F9E36komZRMfaeeH/1/k2x+RKS4+uqi1mhEWjfq
      6fXlywYCs0lWln2CdZ2335LnejOoO73KNnG9NlKjNyphstoMYzabicVib8ohqFEeQRDIZDLX
      cAclEolrHGuDwYDNZkOSJJxO55ITDGCxWumqrmZwmY7iUhvhcT2/Wt4CPvj+/m6EjnoAjhw6
      jiSnicbC3P3JZiy2/OJLRDMMnB2ifYOTzXfWMnzCwur1bQCEchdY+2sRZoffYIr2aBk8LXD0
      ezIl1UaMFoGRrjTrdwkke7Zy99ZfJRp7iK5nn2V87Nu4S31sus8DgKII9J1MYjCJtG00MXA8
      xf7/WGD5VhvxBZlwKAdoiAf0vPLji+xa9Zus2/DBWvxwtdFFNXU0Gk2B+Q0oEKCpu7cqILlc
      7hpKlsXaQi2XXtxOmc1mC1pGHZ26ONegCtQvXCb43UKr1VL9p19g47/eBw+0sddRWThWE8oQ
      DuWrGmfnp1h7n0DLbWJh8QOYbXoseg8nX5rjmX+ZYvPtnYVjqblSBg7a0UuV9B0ysHKri4/9
      gReT0Ug0mKO6XZefLKkoiIl8vY7NamfH2k/S0FRH4waFS0fzEQ0BaFlrpnW9hWWbrWx+wE39
      MgfltnUELpdjc2mYG8mhMWZordnCbeu3v/8P76eAmgtQG+qBwvR2lZRZZaJb/P1oNHpNTZAq
      GMlksuAbLI44qec2GAwkEgmSyWRBSICCH/BLHwUSBIHB2dcpqk4z+dosm0NX2SYq0XLk6EXK
      dnTQ2tLC4WcmMMm1HHj1EMFAmMnBKMm4RGAugSibuP3eZl784UXqGisI+qLENPmEl8OjQxQ1
      9J0JMjcmMdKd4vaPmzj1kyQ2j4JvKsn0JTvlpdU4bHlm5Z7gt0lIPg5+L8ir352nuFZASmnw
      VuZfbNeLcVa0bWS0b4E9962mo3UdifEqXPp27t/6lQ+MzX891IiNWs+fSqUKu7u6gK9vilcz
      xWpNkCzLBbpE1UxaHGpVI0WqOaU64Yt7kNW5Ar8cq/xtYNWVAUGEYh2ZXA79onDaLtnE9//y
      u5TduwZFFjlz5Sfs+ayd7qNhVu82cOSJKfY8cHXXb1vv4MShbuKGSwj6OKdfC5FNC8yNx7nz
      dxROPpmjc4edC6+mkBWZldv1XHwtRcUDz9BrexV58jucnXycmPMSiiKz54sKFrOF8ibo+pFM
      30E9iVQc37COkp024tEMvpkoFpsBg1DMttW/c02G9YMGNUkFFHZtvV5fiNqog1kWC8Fin0Gt
      7EylUhQXFxOLxd5EoahGhdTrqddMpVIFJ7pgit2yJ/EBQqmzlXgkTd1tpTyr9ZGRZY7NzSHJ
      MkU6HV9SHKSeOEldlZemynV0v2Cl2flRxvpjWIuuPsLeszMEgj6K6sJMDCQw20Ua12nQGDIk
      4lkuvAwLczKxkILJaGTskkTXixE69qSpahexlyd4/MU/R4hV0roth6hVcDhtlDflzQG70IIj
      sZvNdV/m7s1f4sCPJqhtcdFzZoqhk3rW13wer/fGRLMfRAiCUFiQ6jAVNVN8o1CtKihOp5Nw
      OFzQHIsjR2qj/uK8wWKqdTVKlMvl8gJzo36AdzIg4xcJkUiEv/rWR3CXGTDLNmInw6z6YgdX
      TkyjD0nMX4ywya/l8pYqtnxiG7IsM9A3xKz8Ku5KDVOXobjYSyAQYO3ufPP8oecGSUkBjM40
      LRv1XD6aZcPd+Tm5z/6Tn5ZODwF/GEnKoDdBfEHBXWpm2UYnXUdG6bwny7nnBTo22zj3RAl2
      fTW1xWtZtixfkXrw0KtYvCmCc2k21P0627be/nOP778XSKfTBIPBgtmtjsdSF7a6W6uhTtWZ
      VceiqkKjllsvniyZzWYL5dZqNlntcw8EAthstiUTCMBms7GibS0wY+8LAAAgAElEQVSGptO8
      +vg8n/qTuxBFgbV3NwLQVTFFxNNOZ2l+AYuiiNVmInRZwFEiU9Eqcvz5XvZ8LJ/gioWzmB0K
      XpeDufEUlw+nCQdkZkcyPPPP83zif1joPjSLRq8jlYSN91s4/6LAqtsdpJMyF1/S4Ag+iBjK
      kk6tYbndTt1yAxbr1TbANZ0b6b04wr5Nj9Dc1Przf2jvEdQFen3HmLpTq47vYiFQbXu10E7t
      +VX/WxWixQkz1SdSFIVAIEBZWRnT09NLJhDkH7ZFrMbp1XPfl1ycONB/zfGWTjeHDh8qPHhZ
      lqmsquTBvV9g5mg76fly1qxbxeBpgXP70zz3zWniYYmxvihVDXZ0OKgpXk33kSSf+ksHPYcy
      OLwiQ+cybHnIQmA6R2hWxjeRRc4puCz1NHr28Mg9v8u6VVtpbm7g3NFpThzuwTcfAmB+Jszy
      xu0f6sUPV5vo4SqbsxrDX2zXA4U5EMlkstA8ozrRanWnGjpVOUsX9y6rQpVKpZidncVuty9p
      ABVVrnVMRX+M3iiSe4MC88zREaRcjnQyw7INbsILUXK5HKcPD+EtqiEQHSYcC9BZW4K96Gob
      n9VqJuU8Tv0qHYf+RUddTRtdR0YoajKRjKbIZbX0HdKy+X4LBx+PYrObuOtzJRx71o/BInPX
      V+DV//h7hsd3UVPRRnt7Ozt37iQWjfH0T55k9ap1bNnwCF6v9xY9rfcWatujCnXn1ul0hZ1c
      dYRVxglZljGZTAUzKZPJYDQaMZlM5HK5QuO+CpUVQi2QU2nUlwTgDbS1LuPEcZnm9Rpefbqb
      ZDyLyapjy515M+jE/lEuBQ5jNBtI6xXu2v37RGNRDpx5jJx07Sxif2iaFdt1xMMyze3VdKys
      oXNTDYde6GbuwhSrVluROmQiqVk8pRZWbs37DXrBRWQ+SPcPm7hn5+2Ulns59soI7eSrUH2+
      EI9+/HdobGz8UNr7N4NqwiymVoGrxW6qI6vSoavcP6IoYrfbmZiYoLKysmBGqXQr6rkymQxm
      s7lwfoPBQDweX8oEL4bJZEJMexCECLsfasChrSeSnKP/4hwtK0pweRyEZrPMXhZZ1rIaRVGw
      WqzctenXeebMn6HRiQx2z5PKBpkZzjLxDT9IRtrNKzgyPEHS+wq+WTP7PlJRuObgKwqrdpvY
      /9eVRKUJmuuXc1fnHs5d6KK0/A1aciU/4lWSJJAMNDU13ZLn835BHXV0I4FWzRZ1R4e8vxYM
      Bq+J/FRXVxemU6ocQiqhljqCdzE3kJo5XqoGXQRBEDCJJUCEmYkF9nw8zys0fGWKZ75xgU1r
      99LaXsaPh7/Dri37Cr9LJpNMTU8Q1wXxNAsUVxtICH5ad+lxnP46ZqON4UCaTJOCVnt10F9w
      No3/spdeRSKX0fLRu7+Eb34ej9eFTmNgcnweh9NKebWL2dk5AHz+m0+9/zBCTVrdiF9ocVRH
      nS+tZogNBsObCt5uNCpVFEVisRhOp7PQAKOWWahJsSUBWAQhVsmx/S8hOPOViKdfv4xGKmbb
      +vuRJImDPf/Emge1PPfik9yx+/5C2t5aEaC8WcvYBYGh82GymigarcC3n/g7zNUjbPkVgbIK
      LfFwimOvDEO4iuXFn+ILH2/I27DLFS73XCGdVIiEo1RX1RGcijA/M05jSxXnj3RTVlLFrp17
      bvUjek+hkmKpWOwEL+4ZNplMGAyGgp+gmkKFWL4gUFxcTDgcxmg0Fsoc1O8uLCwUGmvUwe2Q
      1wRLArAIFd42nGtFxi/qmZsJUtdUxuywQm1dNel0hjN9FpxecN9zjOfOHcSZ2cr8VJyYCXx9
      TjbcXkI2nePE/gle+89L1O7qp3NzBadfm2LrI1oa12oYPJOgpyuMLdOPs8iBt9iNKIp0rMhH
      cw4ffJ2tO9YxMjhDLOBhqldh784HaGlp+YWy++EqQ/TiKI16j1qtFoPBUKA2XHzvaoRHPcfi
      Nke1/1cttFP9CIPBgNlsJhqNXtNfvCQAi7Bh9Xb+/ayCq1Km5/XT7Lr9ToZ6BwEwGPQ8fO9v
      8dh/fI07v6ineZ2Rsf79zEwG2XvfVbqUbFbGXmSiYrMRg1lg7FIE/5CF3mcriSzEMGQa+Oiv
      1BNZSBKPJTh+6iBFXgseRyXtbcuxWmwshMKYNSXc9/G9t+pR/FygRnZUfiA1cwv5nftm9Icq
      c6FaHq2OU83lcng8nkI+YHR0tEDWW1VVVQifBoPBglm1JACLYLVaqYh/iaz+HxFrjnPkNS+l
      zo7CcUEQcDk9nHj1HOMDUWKRFDVtVnpOz7FsXQk9p/zExypxuSsJHHUiGpKEo/Ps23sflTVe
      zp++Qk2HHqvdiNNt4eyhE1QuE2hZYeX8sR7OnzYyMepjfGSOP/i9P72FT+LnA3URSpJ0zdwA
      nU73ttScRqPxmllhmUwGi8WCLMuFKfJ6vR673U4ul2NqaopMJlOgikwmk0xMTCyVQlyPVCrF
      V7+xDsUQRjO3ns9/8g8AePXwM8j6EBFlAKPHj86o4HA6qGy00n8mwtwg6BUPnR23UV7lueG5
      jx44y4a9FW/6XM7J+M43ct+dHyeTyRQInH7ZsJgI952YewsLC0QikWso1FVNIMtygVFa7ShT
      fQCtVlvQHkuZ4OtgNBq5b+1f5odeG0/w5Kv/L089/ziO9gFW3ZOhscONtUggGZMpr7eQzcgk
      owouRym1zW+9aIWbPO3RniS7b3+gYK/+Mi5+ePOUmLeDWiZtMBjIZDIF80nVIhaLpVAWYTKZ
      CrQo2Ww2Xwqt1S6ZQDfC7Rvu58D4H+Isy7Fm5xyiZo6zzwvojSKvvzDKPV82MXIpyZEnQhTZ
      S9mwZRWKrKDTa3jqX09RUV6ZL6+wGlmxtgFRzO9ok2M+ki+GaGqroKTSgUaTlwhDtvZDSUZ8
      q6H6ArOzs7jd+WBCNBottEGqnEBGo7HgcKujXgs9Arf4Hj6QEEWRNs/DnJ/8bmEyjKEowulD
      EZpW23n12z4clhLaW+qpbcmbO89+5yxSxMGmbaupri9BEASSiTTPP3kcvTOKkDNR0WygosFC
      d9cwI8MGREFEFERKte+O9vvnhXg8XmBV/iAiHA4XqM5jsVihkT4QCBQqSlVHW22eWdwPEI/H
      lwTgRhAEgTs6f5+o0AvkWxKbV1uQ4rD8Ng/FlWYuHUyREQO88qN5dn+kjdnpeR79zD3YHVd3
      cpPZgN6cY9t9ddecf7RvgY276gv/P9EV/Lnc17tFIhHD63n/ybN+WnjclpuyRy9unVxMwnU9
      B9GSD3ATuN0eNpX8BaG5fKKm6+UFIsEsVy4sYLFpsbqgrq2IhjU6/uvrB1mz08Po8MSbzqMz
      vZnRTG8USCevDp1eyPW9K97LWw0pHqLrfC9DY9NI6Tjx9NVS5nh8kcaQ0kTi6WuOZaIBgnGJ
      wYFBcoDfFyASidzkQtf+XsXY2Ng1vykM2lMkEqmrmeXrhSKZSAJJJsdDBYf7l74n+K1Q7C3h
      9a4XkLULzI0o7PxoLTOjCS4cCbHnoWbOHZlBFiOs2e2ivN7E6f3zzE1HGB6Yorq2FFEjIsgG
      Lp0ZwVWiR2/IP9OSKjvnXp+kojbfX+AfhzUtd33gEl2JRByL+c3RwGx4lqy9BkJTaAwaommF
      vp5+RBFOnjyNw13E2RNdWB0mwgmF8cF+kuk0Z7rO4ykvYXrKRy4ySVrnJByKkstmmJ+ZxB9O
      IiUiDA+PoLO6MWmSzAQlBnrOMuOLoCfD4Ng0yUwWcgoh/ywzgShyOkZf3zCikODkuVGsRpGR
      sTEUUaC/dwBBb8SsVTh4+AROr4Pe81eIZdNIifCSBngrCIJAEWvoO5Glc2ueLUKrFXAUmbh0
      cpZEIkFzZxHmN7g+e86PYnQmWVgII71ReFXbUMaGdbdxpdtXOK8oCtcMbdOKOj6MEBBQsilS
      sg6zQSSWlKitqabYZcHpKcVt05GIBtCYS6mtraG2phqPy4uQnsdY2s7MxZO4qypJxBNYzGbC
      kSjjE1NodFpS8QTIWRLJLFaHC4tRZC4QZUVHKwYNJOIJkmmZ9uY6IuEI2WgQncNNVXUN87NT
      aDVa0hkJk0FLJBxB0Bmprq7C47RQUV2LTlSYmp5e0gBvhyJzPS8c/TeMJh3FFRY85SbKG0y8
      /twE0UiStrX5XfzsayFK3DUI6SK8XhclZS6ee+F5/HNhpobDSDELU6MhJvqTpFIpAjNJzh30
      UVSiR2/JYpOXF5I0HxTcTAMAjI6OYyly43VYQRCJRWM4iorQkSUta7FZzFjMJtDayCXnSGYF
      tKTJCnqQcpTXVpHJQXVpPoiQyaRAa6C2sphIPIOn2INRpwVRh8Wky7M7Oy0MDE/gdLmxWc2Y
      DRom50IYdAKyqKe4vJrI7CiV1dWEI3FcThvRWBJHkQub1UQyHkYS9ZgMRkxmPW6nbSkR9nZQ
      FIV/fumjSMZxyivKGbsSRBIWaFlrQZHh/CtZ3C4vxa5aisud+Gai9Jwfwl4ZpWObiZM/ieLK
      bmXz9pUIYt7ECQYiLASj1DWWc+zQBWpX5zDM3MWeXXfc4ru9Fj7f3HvmBP8sAy7eCqotv9iH
      un7w9uJy6zcV3L3nf9EvGARBwCG00brOxpEXBqhZlWHl7XaMFg3zExmQtZiEMmoavZjMOqob
      XMSSAdKZOImIRHW7lpHQIdLpq1WPLredsgpPvoqxxE3/ISOzc5O38C7fX6TSccLxuffl3NcX
      0alQhU0Neaq9wovJsWRZXhKAdwKHpp2J/iSZtMTsaD4qcfKZJOEJK40dxZisV234px4/RvWy
      DMYLCxx8chrfiMidn6rm6WeeXsSPL/HYP+/n//7jxxDSLjrb2tFF47fk3n4eyOSSaDQ3d/Az
      CzMcPd3NhZ6BN0WV3g5SOk4i8+YwqBr2VAWgt2+AWCxGX1/fNaOZlgz9d4DGqjVMjdXwsU+v
      IRxI8uK/nWTDjnpKq/MZx+6Tozz1+DBrbmvG1RAh/Pkr/OFEike/WMUDnynBN5WiuqKZ/Qef
      JyWFuHLJz7p7jPjn4oz5z/DM9y7y6I7fuMV3+f5AkiRSyRQ2i/Om31GyKcpqmzAGhwkE54lp
      PYydO4OsUdCjo7KpgthCHJPdxdTwZUSDDbdFS1Yw01RuYDptxTc5iSAK6JUMGlHC5ChmaHyO
      1SvbKXbnfauJqRlEYGSgD0Gjxx+NL2mAd4KW5hbGejIsBJJ4yqyUFdcyNrBAyJdi4HyQBV+W
      XZ8oY2x8HEWRKfrjKvwCNCsWzh9cYOigF4Uss+FuUpkExdUG+k7HyEYsaMp62Pu59RhbfrFa
      HVUIgoAiphDewV4biCUxv9EbX1ZVQ3l5GfWlXuYDPtI5BVEUKC6rwOuyUVldTSYySygpo2RT
      2LzlGLRgMFlpb6snldFRX+FianruGvNISieYC8YhGyeWkpY0wDuBIAisXbaXYORJJoetBHxR
      mu4Y4aXHk1SWNFGxIoneoGHdHg/PfGeEOz5Xwj9hY+2Ohnxq3hIgSQ8OQUtLbTvVDS7Gh4IM
      9kxjTHrJGTWs2rD6Vt/m+wadUSEn39ys0TlKSQ2OUNPajkWnUI4O2VwKKGiBUnMjIwNDlJV4
      UCQHoCAqEkUVDZSXekihJ+KbRuduRCfIiAYd1ZUSvtkkjQ21KIpCbXXVG1dTMBl1RBMSomF6
      KQr0TuHzzfPM4KNcOD7Fpk+HEUSF+YPb2bhpDSNXZpmYHiadTpLIBoilfFRVV6LX64nGwjjs
      TiILCRTJyPa9q3n16cs4vTrG+hfoWNmCW1jHfXsevdW3+Ca8F1EgSZKYD0xQ6q1536JA6r8X
      T5VRm2xUH+Bm114ygd4hvN5ifCc62XfPIwRPbmTmCgj1BxgbmqOuqZRtt28inkhQuz7Gtkfs
      +ALTxJMRNtxRjKdWJpVKkYlpuXhqknQqQ+eWcvZ9vp1oJM7uLQ/f6tt737AQDqHTGt+ozHx/
      CusWR4HUa6gcoW/XW7CUCHsX6FyxgTPnTrB8TR0nn04xOjxNXfkKBgYGuTz/FC1bJGwuLZMD
      aUZOmyh2V+LrtxCeNmMrTeAP+OjYLjA7GWaiL0n/eR815rvpXLn+Vt/aDfFWiTAVvqE+EhYP
      /d0XKSvxMjw0jMVRxOzkGKmcyPBYH2IyTO94jEQySiYeQWe2o9OInDl1ikBwgYVYGrNOYSYQ
      xSgKTM1MkclkiSQyGMQco9M+XE47M5PjxNIyIgqh0AKpeIRgNIVehMmJCYxWBwM9l0jnBLTZ
      OCmNmdDsJOhMzE6MIhrMGPRaxgYHGJ+aQ2+y/vIKQCwWe9cc+nq9nurilXzv8WewF1lZfq+P
      wZEeLl3op7jawNhxD9p0BSahjPIqD6sa7qClqQMdTsRYFYHIBHpzDhSRbNTC+k0raHDtpbS0
      9H26y58N70QAEqF5rkz5mZ6eRZeN4oummJoJYjUIXOodwmzWUeG0oPM2IkfnKa6oZXR4mOJi
      DwuRGB3L2pibnWagrx/f5CRSFmxVFYwMDCFl0vj9QSo9Bi73jiJbi4kFZ5gZG8VdUYOUjHL6
      fA8mRaKoqobhgUHSmSw5WcIkZwjFouRMHooIc3EoQGmJB5NBx9Scj+XL2siFpn55neDx8VHa
      2zve/ovXweFwsG39fYjOWV5/RUQrZVm75zBVyxWeen2Mzs11lNfYuXLRx0svvYy5zE9ZrZnx
      QS85QcOVY3pqaquobLOh02uJ+m5SCfmhgUhTWytGspisVoy5JGVlbi6e7cdoMqFBi9nu4kLv
      AG6XHrvFiCjC+PgEyWiYnp5edCYbRU4HOpMdkwJmixmH3YyCiKAoDI/NYXO6mJmeQFAkiorc
      uO0mDp8ZKvQOj48OozOa0YgCigCyrGBy2pmaGMdaWUxJkYGR0QmiTjNmrcCl7l68TsuSE/zT
      QFEU/tf/81W87jK2bd7Fvz72N+jKBtm+7mFeefEwoinJ9n219J4fZe1uD8H5JKMnrYSNR6hb
      KxEc1xCclrEqbTQ59/HRu75wq2/phngvnGCVqvzaD9P4whm8LtuNf3QDyJkkl6+MojNZaa6v
      uubY1NgE3upKtG+URKj1/9fTqdzour+0GuBngSAItNWvo72jhdePHeH+z6zk7OsOikuLKCl3
      suneNs6+Psb5kyMkcjNceFngN/9oH1f6BA7/+0latqUI9JeSLPJTqg3f6tt5X3HD6IvGgNf1
      7jZYUW9i2bK2Gx4rr85X6qo7uUqr/k6uuxQF+inR0tLGv3/rXzhx8XnmZxYorbLRe3GEbEpD
      LJxixfpKlm8qIjSf4eE/NfD0s09itzupKmvFLe/CXpbC7hGQcx+sHoD3Esl0jFjive12kzNJ
      kpkbNw8pilLwX99pyHVJA/yUaGtro7a5mA23b+LwkSNU1bnRi0ZymjCXuoJoDDmMmhJK3S4u
      v6ghHZ4nnB2ipFFBykp4ip2gyWL5YM6ye0+gyAqieIOd+C3gG+rlSlSgobIcKRFCZ3XhsmgZ
      mQ5gNelxaRJMU4456+PKlVGa2pYh5DLYrQZmAnEqSxz0D4zR1NyIHBjl8JUYTdVeZkcHKa9r
      xmkWiWYEKkryjNxLGuCnhCAI1JYtRwFmRpI89o8HmJ8JMjc/QyqTYO32ClZvrWDTHbWE/DGS
      yTStazy0rysmGo6zcKUc2V9PMvbmlr9fFJhNNiymm9cAvRUEUUDKZjl75gI9fYNUlhUTCoUK
      x0PhGJ5iD2XFRYSCC5w+dYaRnnOcuzxCKpsjt0hJiIKIo8hLdUUxw2PTuB3WwrElDfAzYPPG
      Hfzvr/0xn/rsgyQTKb731Dcwl/mJp7I8+djrVFXUIAUqKba3Ur3mPKeP9FHk9BCc0fBX/9f3
      Cr2sS1iMfFTJq0vyyulpjCYTBq3A0OjUm3ZrKZVgxpcXCqfTgagvxe12MTs5zJQvSuUbRbqy
      IiMoGcam5sllksz4QtRV5UPPS1GgnwGKovDXf/dnVNTZONP/Inf/bo6Lh8O0rXXTf8jC1uYv
      E41E6Op+lYqtl7G5NBz4XpBdy7/Mfbs/e8154MaTEW8l3suGmPcLi5dvLpe7hhT3nTzPJQ3w
      M0AQBBx2J1H9WfZ8tIOB0yeJhiTC/iwjF3LoQ8fxxfpxNM4gSTlOvhhkRftt3Lvrat2PLOfL
      JCA/pOODJgQfdCwekL24Lmjx54u/dz2WBOBnRGNDC4e6jxBa8DM8GKWmXcv+x4N8+nfb0Opm
      8M9qGOrVIIgS7RucWKZWXvN7dX5tOp0mHo9jsViWhOBdYnFL5Lt9dktO8M+ITRt2UF5aSTwR
      Yc8nS7C7zLRtcPDyj89x5IVBZqZ8zEz70Rs0hMdchEIB/uUb/0wodDU8mM1mSSQSxGIxIpEI
      N7BKP7RQFIV4PPa+X2fxNEn1uipB7lthSQP8jLBarVikdmpcGpRRKxNnurjnt02cfHme1hV2
      HB4D6dEWVslfoPXO1jftULIsF+ZaCYJQqFG6GTf+hxEGw1tTnb8XuP65LjaJ3gpLGuA9wD17
      P0ZqwUJoLodWdnHyhQBCTsfgxSDTwzE+cc8f0dbadkP1LElSgdovnU4jSRKJROIXJjqkktC+
      n7jZYl8SgJ8TvN5i7r79UZobVrGsZQ0Gg5GNd1QgSQoxn5HS0huT3yqKQjqdJhaLkc1mMRqN
      GAwGksnkmyanL+GtsZj/E641id5KEJYE4D1Cc3MrTkMtE75uauuq6TsTIhGBessDb+mYpdNp
      rFYrer2+0LkkyzILCwu/MFrg5wE1mKAKwmK8lTm05AO8h1i35jbsdjunrnyX2KiLz9/zJepq
      Gt7yN1qtlng8T4mi9icYjUYikQh2u/1tRwUt4c32vyoEKgkWXBsavea7S4mwWwu/3w/kkziJ
      RAJFUQpjQG02G3a7/X3ppX0neD8SYTdbiD/rORefV6VMv54FbjEploolE+gWQFEUzpw5w9zc
      HLFYjHA4TCAQwGAwkE6niUajRCIRJiYmWFhYYHp6uqAlbgXUa0ffCNMuhs/nu9FPAJifmaKn
      5zLjU/P4fHlBv2YBylku9/QRDMdvSoWeh0QkcuP7j8cTbxqtFAgEC+akeuxmo5d+aVsibzWS
      ySR+v78Q/cnlctjtdtLpNIFAAKPRyMLCQiFEGo1GcbvdP9e/UW2JHBoawuv10tPbj9lsRpCS
      XB4aBVFPz4Uu0jkNeiFL/5UxnE4zly+PYLTacLuK8AcCNNbXcPrEMRJZAZNW5lJvP05PCbrc
      Ar6EmdjsEIYiF+m0zMTwAOmcwrGjx7A4XMxNjJAV9cjZHP65KRbCMY4fP4G9yIvVbOTK0DCJ
      6ALjE9PY3S6u9F5mYj6IRScwNDqDTsyhCArhuIRFTHOxfwytoDA4NIzJVrSkAW4VBEGgtrYW
      h8OB0WjE4XAwN5cncfJ6vdjtdsrKynC73ej1+lvaNxwJ+unpuUwiLeHzBxiemGfFsgaCviCl
      FVUoUor+K0NohDQTY5PEJT0Oy7UmdHF5JYKcon9giEw2zNjodOFYdYmdUDSKLxQlEUsjyQLV
      tdWUFRfhD8cpcZnx+33Ekgq1tdXU1lZT4rnKpB1P52gps9B78TL2mlbcDgtDg0PICT8pjZXX
      XjtBkd2InIqQEKxMTYyi0WiYnJxc0gC3AoIgUFRUhMlkQlEUJElCFEUsFgs6nQ69Xo9GoynM
      uCotLb0lQ/RUDZBT+P/bO7ffNq4zgf845AyHpIY3UaSouyXLshzfkjpJsU29hYM2i2yM3Ty0
      WAT7d+zDIi1QoC/9I/q42ADddrcvDRabButgt11vasexFV180ZWiRIkihxxexbn0gZZlO7ZG
      kiXqNr8nWzg658PofDPnu5zvY3j4NPVaFVmWafO6mEtnMEwJpU1CFCWCAR81XSCZjOLxKoSV
      pvFerlQIh0OUKxUkUSSsBFBrGvF4O0G/zMTkLGVTZKQ3QqUGlrmOAYjo1C03Pq9IOBykUjFo
      VFUquguzXkF3SbT5ZSqVKpIoEvRL4A+zNDONJbhpDwewPD4kdJLJOJWGC8ULuqQQC7gpltfp
      7Eo6RvBBU6lUWF1dxe/3N2sHPW74DDwp7d3Z2XkghvDLjGA1u0JqaZX+4REUeecvylq9igvw
      evc32v10sayn7yY/0yvsRQpQq9WchKwWsfEF2IgGP9/cDUAUD6aDTC63hls4+nlJFmCZJq6N
      l4hlYfH4Gb9IARwcTgqOEexwonEUwOFE4yiAw4nGUQCHE82eOvs3buFs2NVTv/jFtn935OOP
      mwIdsvjDy24Vlf/jdy1ZX37ne7hjsS3HzD283xJZEt29yDYXdfTc51iNlX2XxRO5hkuKbznm
      1zcm7efZK4FgMyV1w+c6/vOfb/t3X/t2PO5QsOGafL7UXuHfftOS9b3nRvHYRIGnpyZaIksk
      1kGbsnU9z8raZ+javX2XRVEu4vF3bTnmkz+M2c6zyyOQwc3P/puNm573x+/x5Z/vYDw3SvB6
      6fvoIwCS168TPHcOgMQPf0j82jUib75J8vp1hEOQ8qtmM9z6qvnAamqG23fHeDS7uOv5PN1d
      SMPDCKEQ8uXLuLwSvrfewh1pNtaWhgaRL12ymWXvuPfNODf/fIvp2Tm+vjf2pBLF3MICk/cf
      tEwOgJlUhd/fyPBgrsRnf1xlOVujUjX4n1s5/vCnlyfX7Qe7VAA3fb3dT/7n8QboiwSpPjfK
      rNeppps5H1ajgbejAwAxEiEwNIQYDCIeku7o4ViC4ONa+OpamZEL53EZu6/api+mcYkezEIB
      a72OSxSx6jWEx29Qo6ghBFqX3qCVyqyurWFZFuuNBtVajXq9TrVao76+bj/BHnKqx09IESlo
      Om7BxVp+Hb/PzakeH4O9gZbKsjsFMOqk17IsLS6jaRoewSRTa/C86B5FIXzpEsrICEa9jhgK
      IXi9lKenqaZSCJKEXiohhXdXPm8vyWbSZNeyqKqKkmjn0b0xvG27l0vs7UXq78cTjyP19yMo
      QSzDQPD5EIIK7mgEWpjekOxMEAmFkGUvpmlS1ErkCwXq62H4Wg4AAAhXSURBVOssLS+3TA6A
      clXHJ7vpS/ooV3XKVYOC1mAmVeFUT2tznvYlErxhA/x6B+kUPz7EAekX1bif/4ePWrJ2/Gcf
      Iz8+Or6M//pda+yR73zvKtFYx5ZjihP/1Bob4OwvEYMXtxzzd//8ie08jhvU4USzLS/Qv/72
      91x/7we0tfDMup9M3J8mm1P5/nfte/NuuEEPKmXKNMxDUyHCNAxbWVr1nEzTXpbtsKUCNBo6
      v/qX37CQzvDa2dNcPHfmlRc8aO6MTfLJv3/KuZEh3rg4SsC/tV/7ZW7QViG4hUMTGxHcbltZ
      WpVFLAj2smyHrRVA1xke7OfC6Jltbf6ny9Ht9E2woc37/cf2uN2cPzvMP/74g31dx+FosOVu
      8/tk3r363W1PthEIA3b8xmzVW+786DDnR4dbspbD4cd219W1LCnVoJBd4o3XL7dCpn1ndXGG
      sukhFIwRCR2fGpwOO8fWCyS4Bb749LeksgdXlmOveTCXJvXoLg8ePjpoURwOGNsvgEvwEO05
      zYWhF9e3PIp0x4L86aslfvSd07ZjHS/QJifOCwSgV3LMzs/TWK9zanDwlRc8DIhygNfODjA9
      PUf00siWYx0v0CbH0QtkewS6eesevfEIbaHIKy92WMhlM8zNL5Hs3swmLKytMHH/UbPZsllj
      7O43ZFXtwGR0aA22CvDWxWE6z7yJT3g+1/Nosjg9weTDeTIrKxS1zc4lq/ki/WGBdFGnUVKp
      WG7cTmWMY4+tAvjiZ2ik7+D22yeGbdRfMc2dn1t1XW/JWbd7cJR4LIRfMtG0TcNesHTuz2cJ
      uGpUTJmg1yLzuJ6lw/HF9hBVyz6kJCUZDLfZDT0ScYDcSppE/yg+r0givnnTanD47DPjQocg
      Q9Vh/7HddYIcpaGOk3I1GB0++kZwoE1hcuoWa7kC/s4ysPVGd7xAm5xIL9DN//8Sr9f7XGk+
      i0f3J1Hau4i3h1hKzVGsW4wMDbyyQPtNPruEqlWIxPsY6rMvOOt4gTY5jl4g2xmGzpyjYYIg
      btYK1YtphHA/xXyaeHuIQrGA1xfBAA5mm2yfzr4zvN939JP6HPYGWyM4O/MVd2ez3Lnz9ZOf
      uX0hsvP30S0BTdNQAm2sZpa/dSfYweGwY/sFuPjO+6x9fgMplnjyM5fYxptXNvOCFEWhu//o
      2wcOJw9bBfjq/75gJV+gDadcusPxw/YIdOGNt4m3hyiqedvJjkIcwMHhaWy/AIa+zrru4q+v
      XrWd7CjEAXaK4wbd5ES6QV1GjVJ1nVu3b9P1N+++8oJHDccNuslxdIPa3wcQZbwe94H0qGol
      zybDNZgcHyOvPV/qy+G4YasA06ksH/zte/Qkjk826IvIqhoDETfpos7qwgLJ4dfIZdL2v+hw
      pLH9hiw8nODBg4cIvhAjW6fOH2l0vYFWMfAGBCTJTUnTaHy7KLTDMcNWAd59/+9bIceBM3Sq
      n+U1jYRQwYj1Yi2nGBpyYhvHncNhXR0CPJKPnmTzgrwIdPf2AS/vD9D24c5fDE+359wurmgU
      w9iMsb9ojoHhnX+adyOL5JVtZfFEryEEzu+7LHhitrL85AejttM4tUG3wYtqgx4UjiwvZrey
      7Glt0OMaCNvOg23UKjTM/Vfiw7Lh4HjIsi8dYnYj0GHxdb+MhYnbTK3UOX/pPImgj9m5ReIx
      hf/89AYf/ORD5hYWcbsaWJ4wHkOl3PATVQSU9iQ0yjQQKa6t0t0/QH4lzd2xCc4NdrKihxjq
      7aSwmkJpT6JXVNaRSMQiFLJL3Hu0yDtvX7GVb3LsawQ5gOiROTXQg75eZXFFRXFp3BjL8OF7
      3+fmH7+ga2CEarlAf3eSL+9O8ldXLjGfXiUZb6dUqbC2liUajhBS/GRyJTrCfjL5Mn3d9qnj
      T1PILPLNzDJ9Pe1EE334RYHs8iKSEuX2/35O7+gVzJrK8PAIs1PjtEU7yOVVvL4APZ3tzC4s
      0d/byXImSyTWfD6hjm4C8qs3DV+amiBjuQhIfscG2C5q1cQnWchuNzPTj+js6mJxeYULl19H
      AkzLQpQCmEYNU3AjVFcoBoZQ5x5RKVeIhfzkSjUaqQxDvV30FkpEgxJlI8JyepZaqUw6qxGQ
      RbySBLEgX9+dQAcaJog232qvLLOmqmCsI8oBymqGrojMimbx+pW3n4zbuNcxn1qiK9HB/Ylx
      arUqqlok3tMsEpDPqaRTs1SrOpVEB9Yutokky4iiRWpxhWy+yuVzvWSLJqjzJE+dYag3wYMH
      anNwQ2Nu2U9YdhH11JhcWMEqLDFVKiJ3DrGcnqGU1xAD0T1RAPBw+uwwSw8fOgqwXZL9A3RZ
      LsKKH+ohZmfn6Ej2UC81Ww25AFn24jbr6J4goiCTz6dpC0cJhyIoXheFeo6OaLMjjs/nwyWK
      hP0BGrqHkuYm4JeJhDZ6cLm5eu0aqdQCogCa1qxQobykR1f/QB9yrkJ+eRZZlvG0+ZhbKdDT
      FaMmNm0x2StjmiY+nw+jXiWravQlouS0GopfoSMawqgUcVkufF6BcgCioTYWl3M7fl6+UDvd
      yTpul4Fa1sHtw6xPI7WF8T7W5o5IkPHxcUKRBN1yAqO0xOxqiVA0Qt0XQBBkwkqAhuXHapjU
      67vv2PM0kl9iZmqKaLh9t0bwszfCssuLqFWD06eanpPjZgRvh2I+hy8UQRScShJHiV0ZwXox
      jTsygKY2qyYUSjV8RuNbPcJOEsFI1Nn8R5BdHYEEj5f1vIb52GvT0BvA4b8O6eDwPLtTAH+M
      sJRCSQ6haRoDvV2oFQNpr6VzcNhndm0Ex5M9zX9ITaOsM/Bsp3jDMDj7059ue76NqN5h8i07
      HH/2JRLs4HBUcLpEOpxo/gIy/p0Ry9ZHzwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='cold_details' width='192'>
      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
      FwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='covid19_index_intr' width='128'>
      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
      2MBOYzFrywrwEKDhT79kw44UflE6k+jTYc8yOLJrPZuDd/OjDcuY6OgjcKiSJ3/zBMbPfjri
      B0ddaax1C/DXUdNcyIrSAjzJQLKHgtIVFDbXUOcfZE7H6+x59yaWPVzERIcdSMaTt4Tl83vZ
      O8Snh1uRpQIIv99EcFY+087/cW+fRv6sIE3vRx8Nek5HB0Hf9fiibhET8gvwDPHp4VZkqQCC
      QT9jvd6Yca93LP5g7OnAADiduI63cSJ6fMJEJvkDQ3p6uBVZbA8AHnfsab9j3B7oHmTC+DkU
      utaytWoq378rB08yRLo+4V/1b/MRMPu8S0OhUNyH6LzAEexWEv1aLBdAINgBUUc+dwQTnZDt
      5curfsKo7dtZt+oY3YYdZ6aPuXf4yOTfA66Mdz5gKBQiPc5xr1YV/VosFYDb7aW9zU90AH5/
      O96J7sEnJk+m6MGfU3T+2Im9rJ8ymUnDsVALsdQewHFjDu6DjbScv3U3Wmg86CbnxvhvAuMz
      aNlfR+pNcxg/1Iu0GEsFgHce8337ebq8gUAEiARoKH+a/b75zIvdG/b78PWX+OcnXUQ4O6dp
      7+959sg87v9ygklCWO/s4At+Ehh7enig6SUqKvZx+FQ3ht3J5Fl38c1v3Y4v7cJPd7WfHWy9
      AEbY1R6AtW4BashpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJp
      AMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJp
      AMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJp
      AMJpAMJpAMJpAMJpAMJpAMJpAMJpAMJpAMKNutwLuGQXPD08ni6a95az/dXDnOo2sDszyb1j
      KaUlPi7iAPGrmsUCCPPujg3sNBaztqwADwEa/vRLNuxI4RelM3HEnWPQUvVrnm2dxwNrHyLH
      k0wk0MRr25/l190rWHfPNBK2c5Wz1i3AX0dNcyErSgvwJAPJHgpKV1DYXEOdf7BJrTQ2pFPy
      nRJyPMkAJHtyKPlOCekNjbSO1NqvUJYKIPx+E8FZ+Uw7/4+sfRr5s4I0vR8eZJYTp/MMPT1R
      wz09nHE6cQ7TWq3CUgEEg37Ger0x417vWPzB4CCzJnDLgkn8fWsVTYEIAJFAE1Vb/86kBbcw
      YRjXawUW2wOAxz0mZmyM2wPdg89Jy3uANfYXePyxlZwMA44vcOuDa3hg5sAtYCgUiju/s7Pz
      /1nyFSX6tVgugECwAxgYQUcwkGCGwae1T/JMy808/Ks/kJWWTKTrE+r/vIHftn2fHxZf078J
      dLlcMbNDoRDp6elDtv7LLfq1WOoW4HZ7affH7vb8/na8bnf8SR2vU7FvCksfLCIr7dwmMC2L
      ogeXMmVfBa93DOeKr3yWCsBxYw7ug420GOcNGi00HnSTc2P8N4H09NCDHXv0ez27HTs9sZtD
      YSwVAN55zPft5+nyBgIRIBKgofxp9vvmMy92b3jW+DkUjt3HtvIG2sJnyzHCbTSUb2Pf2ELm
      jB+x1V+RbKZpmpd7EZfkgp8EnmDv+rU0FKxjTcm5PX7kFA1Vf+blA839nwT65i7gvnsKyExO
      /HShUCju3uBzlTbbkLyskbIo6tttvQBG2NUegLVuAWrIaQDCaQDCaQDCaQDCaQDCaQDCaQDC
      aQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDCaQDC
      aQDCaQDCaQDCaQDCaQDCaQDC/Rd6azxglRMkwgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='indicators_bar' width='192'>
      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
      tMV/v9DGxlVFXN80y7I4dCrIxtVF6LfYXmUBGO5u5t2jZ+m62Ebba2mW3b+eCquLUG4D9UuW
      ceb1fbxyAtwF89hRmn9HtQpyPQT8OVzpCTEYibF4TsnYPLfTwWAkRuuRIA+vbaCla+iOasXi
      cbZt2kRr+xV0TSdjmhw8dJgH1zTRfLEFv9+Pdu1jzaWLF7F08SIAXt+zlzWrVt3Wk/+6/uFh
      nl65ht5ImJePf0xxXt60yzb3dON2OqktKiHgy2VA1Ue5uo532X2krrSDZaHn52Ol02Oz3Q0N
      pLu6MMMR0HU09+yPwGnD4uT5CM88VAlAabGbK91xuvsSDIXTFPpdTHyed/YksCyL2oqcW65b
      WQDyKhfw2GMN8Njo75quo1FIERpoOex86itYFmiaxmxelDQNdqyaR0VxHhoaT21YxIFTbdSV
      F7ChsZa+UJTffdxCQa6HuZWFnGnt4765ZZQV5XL4bNcNnxDNViKR4DfvHqC0pISHtm/F5XRS
      WlzM87/+DVUVFezcuplYNMbZ5mZWr1yB41oY5s+bi8936z9I9m3XeO7t35HvzeEvt+1C03T+
      6923aB8aAOBI6yWcuo7b6aQ0388LRz6iNxJhzdz57Fy6bPav/tdOX3Sfb/STn0AhqZZL5Kxb
      i+Z0krd9O4lTp0i1XSF34wY0p5Ph19+ATIacpiYSp09jJRLkP7wLHA7ix46R6e/HMeVTsluJ
      jKRZs6yQQMHop14+r4O/+sY8fvFaJ3m5Tr7xZA1D4TSnzkfYuraYyIjBzvWlOBy33l7t8/ht
      0KkXwl5891N+vu+0klqlhT5+9P0np53f09XJ6aOHldQG2PHE09NfCBsYgt/uVVO4vg62PDjt
      7KGf/JSRPWpquxsaqPjnf5p2fqLnVWLt/6WktubMJ7Dq16M/y7dBhd1JAIStSQCErUkAhK1J
      AIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCE
      rUkAhK1JAIStSQCErUkAhK2pC4Bl0tNyktd2v8nlvin34rEMLp44yGu799DWf2f36RHiTigL
      QKSvhaOtSR5+aCMX3t/H0PjNwmg7fpBedx1f2r6GTz94m57h9PQrEkIhZQEI93UzZ8ky3O48
      mhb7abk6fgvr/jgsrivD5StiUW0x/UNhVcMQIiulDTI8Xg9oGj6fj1Q6DYzeF3J+TYCP3juA
      3+8j3NVNZWDhDT3CksnxwBiZzM1KfDbjtKxJtaYy0mqPTqlkcuxeolNp6TSzu5n4zGUyJkaW
      7c6o3OdT/r5TXX8eKKltMam2sgC4PDn0hcJQXMhAf5iCueM3hS2uW8a2ojoShkmrFafQ58va
      I8yZ5S7Id0rTtKz9qpzXurCo4vZ4pr81osLaDoeetUeYQ+U+1/XsPcKczhuaqnxmtTUm1VYW
      gEBVPafeP8SRYBFXB73sanIwMtBJzF1GbrqPc609WOkoEb2M+0pzVQ1DiKzUdYjJL2PzpnX0
      h2Isuq8Crw4Jjw+vUyfHV0pNpUXKcnJfeRneGdzFVwgV1DXI0DR8/mLq/MVjk7z5RXivla2o
      rlVWWoiZkgthwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC
      1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYk
      AMLWJADC1hS2SLJIxUcYHBoikZp6r3mL+EiEwcEhookUlrJBCJGdspvjpmKD7H/3A1y5eYRT
      Xh7btQHXtZtAx3pb2PfxRQryvUSiGR7csoXSPFWtIISYnrIjwFBXC4GFG9i2dRvL/REuDI4f
      BfrbO5m7agNbtmxjUbmXgVBU1TCEyErdESAexV8dAE2nvKKQ4+E4lOQBUNO4jPNvv8Olwybe
      QA1b7i+QFkk3IS2SFNS+Wy2SNE0nlUoBOSQScZy+8VLdLc3k169h56IyTn/4Hp0DERZWFuC6
      1hIonU6P/QzqWyRNbMc01d1okaRp0zQIUVhbd+hZt1t1i6RstVW3SJpYW9kpkL+0ks7mc6RT
      UU40R6ivHO/LNDI8gtPlRNN0dDLEEmk0TRv7NzrQyb+rNLHW1H93w7T1VdbMVvf3fJ9PrKMu
      AOUNLC0zeHPPfipXbaLEDYOtn9DSF2fhmo14+s+ye/ebxAsbaKwrvvUKhVBA3SmQ7qSucS11
      jePTiufdz/Wn+vL121muqrgQMyQXwoStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkA
      hK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAIStSQCErUkAhK1JAISt
      SQCErUkAhK1JAIStSQCErUkAhK1JAIStKbs5LpZFbHiI/lCMQGkF/pzxe91HQ/0MhKLXeoM5
      KKmsIM+j9j78QtyMsiNAYriP994/TF9vF/v3f0DCHJ+XSkQJBoMEg0FOHj5Ix1Bc1TCEyErZ
      ESDYfYmSRQ/QVF9I+5G9XBwwWFY2Wi5QMZdAxVwysT6C4RR1pfmqhiFEVsoCkE7GyS8pAE2n
      pLSA9uEElOVNWMKi/UILZfWL8Tk16RF2E9IjTEHtu9YjTHeQTCTByiEWi+HOn3yOb6XDtA4Y
      rG0MAKBP6BuVSqUm9XFS3SPM4/FMO/9u9AjTpwmAyh5hDoeOI8t2q+4Rlm2fq+4RNrG2svcA
      BWVVtJ87TSo1wtHzERoqJ29w9/mzFNQvJc91d/pwCXEzygKQX9ZA0zwPe/YdZOGmhwi4rLEe
      YWCRyiliaU2RqvJCzIjSNqkVDSt4omHF2LSJPcLmNSxWVVqIGZMLYcLWJADC1iQAwtYkAMLW
      JADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQA
      wtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLWlN0cN5OOcerQQdoH
      4xTXNbJhZcN42iyDy6ePcratF2dBJRsfWE2eR9396IWYjrIAhLovEvHO44nH53Dinb10jtQz
      J2+0F0C85wKXYgXsenQtZFLoTukRIO4NZQGIhgYpq12Mw+lhwVw/Z/vjzMnzAdDV2k0qrrH3
      jQt4AjU8sHYFebqFaY520rMsa1KLHtOyVA0TyN4O6PqYVDEzGazpts80UXVctCwLM8t2Tzum
      z6h21n1uKdzn1uS/t7o2qVho2uhJj67rk3aoYaQpqVtJ0/xSWk98yMXOAVbOL5u0zKQnnsoA
      WLd4kisOn2lZaNPU15Q+CW+13cpKA9lrqwzf1NrKApCTX0h7Tw9maQVXOsKUr84Zm1deVcSV
      UBQow+fLIWKZaJqG0+kcG6BrQn+saXtofRY0JtWaSlfYKwvA6XROv30Ka+u6hp5luzVd3Wmp
      pmlZ93lGV7jPp/y9lT2ziqoXQu8JXn11N53uOub5tbEWSYH5ywlEmvntK69yvDPJ/OpSVcMQ
      IitlRwCHJ5+Nu56cNG1ii6S12x9VVVqIGZPrAMLWJADC1iQAwtYkAMLWJADC1iQAwtYkAMLW
      JADC1iQAwtYkAMLWJADC1mYdAMuySKXTyr+yKsTdMOsAZDImz/3oFyQSSQmB+MKbdQC6e/vo
      7unjuR/9gngioWJMQtw1MwpAOm1w+PgnvHXgI/7zx78iHk/Q3dPPv//vL0kmU6rHKIQyM/r/
      AE6nA13T2b3vAKlUmvy8XL77J1+nvLQEt3v6/9kjxOfdjI4AmqZRXVlGod+PrutsWLeKupoq
      crweNE3u6CC+uGZ0BIgnkhw7dY4/+8YzdHRdJWOa8sQXvxdmFAC3y8n2TWvJ9eVQXVlGOm2o
      HpcQd8WMToEcDge5vtG7OmiaJuf94vfGbVwIMwkN9BJLWyQSCeU3rRJCpVkFwDIznHzrRf7t
      h3/P0W6T5g/30xaMKxqaEOrNKgBmOs7h1jDfemwlqQwUOINc6pWLYeKLa1YB0HQH+Vac5s4Q
      PS0n+fWeMwT88n5AfHHNKgC6y8szX32KqF5K6MJRmr7yTVZU5qkamxDKze4UKGNw4eIliivn
      smRJA1aog6vhtKqxCaHc7G6NaFmEBnroCY/+eqn5LEUL1lEbcCsYmhDqzSoAutPN5sf/aOz3
      toMv02HIRTHxxTWrAGRScX7+3D/wae/o7/GExp/+7S4V4xLirpjdEcDl4elvf5/HMtd/91Lo
      99102UxyhI/f30/PcJq8yoXseKBx/A2H0cdvnn8LR4EPzVvI5o3rKcqT0yhx9804AEMdZzne
      3H3D9EWrN1Eb8NwwPdh9AaNkGU9tq+LMgT20RZYw3z8aAWOoj4L7N7NzZQ3ylTpxL804ALFQ
      Hy0tLTdMr1i6ntrATZaPhCipvA/d4WJubQFnBhPMv3a0SKQ1gpcO8+qVo/jL5/FA0zJynNqk
      HmHGhPcWSvt0WUyqNVW2PlqfhYxhYE7XISaTUdbAwTQtzCzbrbpHWNZ9birc51P+3jPevzXL
      tvKdxk10tLUSC3cz7KrEig5Q6b/5qYvucGCkDbBcpJImrpzx13pf5RK+9kwjmGlOvv8Ol3tq
      aay5SYquu5dfvVZdO8v6lX7l/HN96L17g5vlm+AYb+57ix0LNIZqH6Cs6zQ9sSTFeTeupqi6
      ntOHPsIbr6K5Ncm2R70khodIOf3Er56jPaxTnO+gJ2pyf14OmqbhuNYTK5PJjPULA9AVPxEm
      1ppKaX8yRr9pO20NhbV1TUPPst0qwzexH9zNGIp7wk16bs3msbruwOPLo6R6Hsfefp2Ll8/T
      G7z5hTBfYRXrVy8kFs+wbssWch1gJGMk0iZlcxdT6XcQiaZZ/uAmqgI5N12HEKrN+AhgmSaa
      y8vjO7bjLS9mZ8de+h0P8WC9/+YP0HQKympZXlY7NimvpIbrX5yoqV9MzZ2MXIjPwIwDcOXY
      79h7NsamrRvwJi2adjyu9tREiLtgxgGoWNTE0tBhDrz8Uy50hKiet4B1m7aypnE+HqfcYVF8
      Mc04AF5/GRsfeoKNDz0BmHR++gH/+i/fo+evf8ZXVxff8vFCfB7NOABGKkrziY85dPwkp89e
      oqR2IY985wdsub9Q5fiEUGrGAWg9spd9p0I8sOXL/OG3q/G4XGiadk8/ohfiTv0/ODjMjs86
      j9gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='state_cold' width='192'>
      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
      koM2FArkAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='state_tooltip' width='192'>
      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
      7LMy/z/tPgLPeIh3RwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
